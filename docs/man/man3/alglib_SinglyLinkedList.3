.TH "alglib::SinglyLinkedList< T >" 3 "Version 1.0.0" "AlgLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
alglib::SinglyLinkedList< T > \- Template based singly linked list implementation\&. All nodes are dynamically allocated\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <singly_linked_list\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSinglyLinkedList\fP ()"
.br
.RI "Constructor for the \fBSinglyLinkedList\fP structure\&. Initializes the head pointer to nullptr\&. "
.ti -1c
.RI "void \fBTraverse\fP (const std::function< void(T)> &visit_callback) noexcept"
.br
.RI "Method that traverses the singly linked list and prints the data of each node\&. Modifying the method to do something else with the data is straight forward and can be done by changing the body of the while loop\&. "
.ti -1c
.RI "size_t \fBSize\fP () const noexcept"
.br
.RI "Method that calculates number of nodes in the singly linked list by traversing the list\&. "
.ti -1c
.RI "size_t \fBFind\fP (T value) const"
.br
.RI "Method that searches for a value in the singly linked list\&. "
.ti -1c
.RI "std::vector< T > \fBGetAsVector\fP () const noexcept"
.br
.RI "Method that converts the singly linked list to a vector\&. It is used for teseing purposes\&. Using it in production code is not recommended as it is simply missing the point of the singly linked list\&. "
.ti -1c
.RI "void \fBInsertAtBeginning\fP (T value) noexcept"
.br
.RI "Method that inserts a new node at the beginning of the singly linked list by creating a new node and pointing it to the current head\&. "
.ti -1c
.RI "void \fBInsertAtEnd\fP (T value) noexcept"
.br
.RI "Method that inserts a new node at the end of the singly linked list by traversing the list and adding the new node to the last node\&. "
.ti -1c
.RI "void \fBInsertAtPosition\fP (uint32_t pos, T value)"
.br
.RI "Method that inserts a new node at the given position in the singly linked list by traversing the list to find the possition and splicing the new node in\&. </summary 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP Position for the new node (0 - first)\&.
.br
\fIvalue\fP Value for the new node\&.
.RE
.PP
"
.ti -1c
.RI "void \fBDeleteAtBeggining\fP ()"
.br
.RI "Method for deleting the first node in the singly linked list by pointing the head to the next node and deleting the first node\&. "
.ti -1c
.RI "void \fBDeleteAtEnd\fP ()"
.br
.RI "Method for deleting the last node in the singly linked list by traversing the list to the last node and deleting it\&. "
.ti -1c
.RI "void \fBDeleteAtPosition\fP (uint32_t pos)"
.br
.RI "Method for deleting a node at a given position in the singly linked list by traversing the list to the given position and splicing the node out\&. "
.ti -1c
.RI "\fB~SinglyLinkedList\fP ()"
.br
.RI "Method for deleting the singly linked list\&. It traverses the list and deletes each node as they are dynamically allocated\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>
.br
class alglib::SinglyLinkedList< T >"Template based singly linked list implementation\&. All nodes are dynamically allocated\&. 
.PP
Definition at line \fB55\fP of file \fBsingly_linked_list\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T> \fBalglib::SinglyLinkedList\fP< T >::SinglyLinkedList ()"

.PP
Constructor for the \fBSinglyLinkedList\fP structure\&. Initializes the head pointer to nullptr\&. 
.PP
Definition at line \fB122\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> \fBalglib::SinglyLinkedList\fP< T >::~\fBSinglyLinkedList\fP ()"

.PP
Method for deleting the singly linked list\&. It traverses the list and deletes each node as they are dynamically allocated\&. 
.PP
Definition at line \fB331\fP of file \fBsingly_linked_list\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::DeleteAtBeggining ()"

.PP
Method for deleting the first node in the singly linked list by pointing the head to the next node and deleting the first node\&. 
.PP
Definition at line \fB265\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::DeleteAtEnd ()"

.PP
Method for deleting the last node in the singly linked list by traversing the list to the last node and deleting it\&. 
.PP
Definition at line \fB283\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::DeleteAtPosition (uint32_t pos)"

.PP
Method for deleting a node at a given position in the singly linked list by traversing the list to the given position and splicing the node out\&. 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP Position of the node to delete (0 - first)\&.
.RE
.PP

.PP
Definition at line \fB303\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> size_t \fBalglib::SinglyLinkedList\fP< T >::Find (T value) const"

.PP
Method that searches for a value in the singly linked list\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP Value that the list will be searched for\&.
.RE
.PP
\fBReturns\fP
.RS 4
Index of first occurance of given value (0 = first)\&.
.RE
.PP

.PP
Definition at line \fB162\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> std::vector< T > \fBalglib::SinglyLinkedList\fP< T >::GetAsVector () const\fR [noexcept]\fP"

.PP
Method that converts the singly linked list to a vector\&. It is used for teseing purposes\&. Using it in production code is not recommended as it is simply missing the point of the singly linked list\&. 
.PP
\fBReturns\fP
.RS 4
std::vector of nodes that are in structure\&.
.RE
.PP

.PP
Definition at line \fB186\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::InsertAtBeginning (T value)\fR [noexcept]\fP"

.PP
Method that inserts a new node at the beginning of the singly linked list by creating a new node and pointing it to the current head\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP Value for the new node\&.
.RE
.PP

.PP
Definition at line \fB203\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::InsertAtEnd (T value)\fR [noexcept]\fP"

.PP
Method that inserts a new node at the end of the singly linked list by traversing the list and adding the new node to the last node\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP Value for the new node\&.
.RE
.PP

.PP
Definition at line \fB215\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::InsertAtPosition (uint32_t pos, T value)"

.PP
Method that inserts a new node at the given position in the singly linked list by traversing the list to find the possition and splicing the new node in\&. </summary 
.PP
\fBParameters\fP
.RS 4
\fIpos\fP Position for the new node (0 - first)\&.
.br
\fIvalue\fP Value for the new node\&.
.RE
.PP

.PP
Definition at line \fB239\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> size_t \fBalglib::SinglyLinkedList\fP< T >::Size () const\fR [noexcept]\fP"

.PP
Method that calculates number of nodes in the singly linked list by traversing the list\&. 
.PP
\fBReturns\fP
.RS 4
Number of nodes in structure as size_t\&.
.RE
.PP

.PP
Definition at line \fB146\fP of file \fBsingly_linked_list\&.h\fP\&.
.SS "template<typename T> void \fBalglib::SinglyLinkedList\fP< T >::Traverse (const std::function< void(T)> & visit_callback)\fR [noexcept]\fP"

.PP
Method that traverses the singly linked list and prints the data of each node\&. Modifying the method to do something else with the data is straight forward and can be done by changing the body of the while loop\&. 
.PP
Definition at line \fB131\fP of file \fBsingly_linked_list\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AlgLib from the source code\&.
