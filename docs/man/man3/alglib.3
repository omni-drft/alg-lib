.TH "alglib" 3 "Version 1.0.0" "AlgLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
alglib \- Default namespace for the AlgLib library\&.  

.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBerrors\fP"
.br
.RI "Namespace for errors in the AlgLib library\&. "
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBArrayStack\fP"
.br
.RI "Template based stack implementation that uses an array as a base structure\&. It doesn't allocate memory on the heap, but it has a fixed capacity that has to be defined at compile time\&. "
.ti -1c
.RI "class \fBCircularQueue\fP"
.br
.RI "\fBCircularQueue\fP class is a queue data structure implemented using an array\&. It doesn't allocate memory on the heap and has a fixed capacity that has to be defined at compile time\&. It uses a circular buffer to store elements\&. "
.ti -1c
.RI "class \fBDoublyLinkedList\fP"
.br
.RI "Template based doubly linked list implementation\&. All nodes are dynamically allocated\&. "
.ti -1c
.RI "class \fBSinglyLinkedList\fP"
.br
.RI "Template based singly linked list implementation\&. All nodes are dynamically allocated\&. "
.ti -1c
.RI "class \fBSLLQueue\fP"
.br
.RI "\fBSLLQueue\fP class is a queue data structure implemented using singly linked list\&. It allocates nodes on the heap\&. Queue can grow dynamically\&. There is no limit to the amount of elements besides the memory available\&. "
.ti -1c
.RI "class \fBSLLStack\fP"
.br
.RI "\fBSLLStack\fP is a stack implementation that uses a singly linked list as a base structure\&. It allocates memory on the heap, so the stack can grow dynamically\&. "
.ti -1c
.RI "class \fBVector\fP"
.br
.RI "Template based vector implementation that uses an array as a base structure\&. It allocates memory on the heap, and it can grow dynamically\&. Capacity doubles every time the size exceeds current capacity\&. "
.in -1c
.SH "Detailed Description"
.PP 
Default namespace for the AlgLib library\&. 

Default namespace for the library\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for AlgLib from the source code\&.
