<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_vector_8h_source" xml:lang="en-US">
<title>vector.h</title>
<indexterm><primary>Include/vector.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_vector_8h_source_1l00001"/>00001 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_vector_8h_source_1l00002"/>00002 <emphasis role="comment">//&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="_vector_8h_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="_vector_8h_source_1l00004"/>00004 <emphasis role="comment">//&#32;Copyright&#32;©&#32;2024&#32;Piotr&#32;Walczak</emphasis>
<anchor xml:id="_vector_8h_source_1l00005"/>00005 <emphasis role="comment">//</emphasis>
<anchor xml:id="_vector_8h_source_1l00006"/>00006 <emphasis role="comment">//&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="_vector_8h_source_1l00007"/>00007 <emphasis role="comment">//&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;“Software”),&#32;to</emphasis>
<anchor xml:id="_vector_8h_source_1l00008"/>00008 <emphasis role="comment">//&#32;deal&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the</emphasis>
<anchor xml:id="_vector_8h_source_1l00009"/>00009 <emphasis role="comment">//&#32;rights&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or</emphasis>
<anchor xml:id="_vector_8h_source_1l00010"/>00010 <emphasis role="comment">//&#32;sell&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="_vector_8h_source_1l00011"/>00011 <emphasis role="comment">//&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_vector_8h_source_1l00012"/>00012 <emphasis role="comment">//</emphasis>
<anchor xml:id="_vector_8h_source_1l00013"/>00013 <emphasis role="comment">//&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="_vector_8h_source_1l00014"/>00014 <emphasis role="comment">//&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_vector_8h_source_1l00015"/>00015 <emphasis role="comment">//</emphasis>
<anchor xml:id="_vector_8h_source_1l00016"/>00016 <emphasis role="comment">//&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;“AS&#32;IS”,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_vector_8h_source_1l00017"/>00017 <emphasis role="comment">//&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="_vector_8h_source_1l00018"/>00018 <emphasis role="comment">//&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL</emphasis>
<anchor xml:id="_vector_8h_source_1l00019"/>00019 <emphasis role="comment">//&#32;THE&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="_vector_8h_source_1l00020"/>00020 <emphasis role="comment">//&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING</emphasis>
<anchor xml:id="_vector_8h_source_1l00021"/>00021 <emphasis role="comment">//&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS</emphasis>
<anchor xml:id="_vector_8h_source_1l00022"/>00022 <emphasis role="comment">//&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_vector_8h_source_1l00023"/>00023 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_vector_8h_source_1l00024"/>00024 
<anchor xml:id="_vector_8h_source_1l00025"/>00025 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_vector_8h_source_1l00026"/>00026 <emphasis role="comment">//&#32;File:&#32;vector.h</emphasis>
<anchor xml:id="_vector_8h_source_1l00027"/>00027 <emphasis role="comment">//</emphasis>
<anchor xml:id="_vector_8h_source_1l00028"/>00028 <emphasis role="comment">//&#32;This&#32;file&#32;contains&#32;the&#32;implementation&#32;of&#32;the&#32;Vector&#32;class.&#32;Implementation</emphasis>
<anchor xml:id="_vector_8h_source_1l00029"/>00029 <emphasis role="comment">//&#32;is&#32;based&#32;on&#32;templates,&#32;so&#32;the&#32;class&#32;can&#32;be&#32;used&#32;with&#32;any&#32;type.&#32;Vector&#32;class</emphasis>
<anchor xml:id="_vector_8h_source_1l00030"/>00030 <emphasis role="comment">//&#32;implements&#32;an&#32;array&#32;that&#32;can&#32;be&#32;extended&#32;and&#32;shrinked.&#32;All&#32;elements&#32;are</emphasis>
<anchor xml:id="_vector_8h_source_1l00031"/>00031 <emphasis role="comment">//&#32;allocated&#32;on&#32;the&#32;heap.&#32;Capacity&#32;doubles&#32;every&#32;time&#32;the&#32;size&#32;exceeds&#32;current</emphasis>
<anchor xml:id="_vector_8h_source_1l00032"/>00032 <emphasis role="comment">//&#32;capacity.</emphasis>
<anchor xml:id="_vector_8h_source_1l00033"/>00033 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_vector_8h_source_1l00034"/>00034 
<anchor xml:id="_vector_8h_source_1l00035"/>00035 <emphasis role="preprocessor">#ifndef&#32;ALGLIB_INCLUDE_VECTOR_H_</emphasis>
<anchor xml:id="_vector_8h_source_1l00036"/>00036 <emphasis role="preprocessor">#define&#32;ALGLIB_INCLUDE_VECTOR_H_</emphasis>
<anchor xml:id="_vector_8h_source_1l00037"/>00037 
<anchor xml:id="_vector_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_constants_8h">constants.h</link>&quot;</emphasis>
<anchor xml:id="_vector_8h_source_1l00039"/>00039 
<anchor xml:id="_vector_8h_source_1l00043"/>00043 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacealglib">alglib</link>&#32;{
<anchor xml:id="_vector_8h_source_1l00044"/>00044 
<anchor xml:id="_vector_8h_source_1l00051"/>00051 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00052"/><link linkend="_classalglib_1_1_vector">00052</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector</link>&#32;{
<anchor xml:id="_vector_8h_source_1l00053"/>00053 &#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_vector_8h_source_1l00054"/>00054 &#32;&#32;<emphasis role="comment">//&#32;Constructors&#32;for&#32;vector&#32;class;</emphasis>
<anchor xml:id="_vector_8h_source_1l00055"/>00055 &#32;&#32;<link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector</link>()&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00056"/>00056 &#32;&#32;<link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;elements)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00057"/>00057 &#32;&#32;<link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;elements,&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00058"/>00058 
<anchor xml:id="_vector_8h_source_1l00059"/>00059 &#32;&#32;<emphasis role="comment">//&#32;Inserting&#32;and&#32;removing&#32;elements&#32;from&#32;the&#32;vector.</emphasis>
<anchor xml:id="_vector_8h_source_1l00060"/>00060 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab">Push</link>(<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00061"/>00061 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d">Insert</link>(<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;index);
<anchor xml:id="_vector_8h_source_1l00062"/>00062 &#32;&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814">Pop</link>();
<anchor xml:id="_vector_8h_source_1l00063"/>00063 
<anchor xml:id="_vector_8h_source_1l00064"/>00064 &#32;&#32;<emphasis role="comment">//&#32;Accessing&#32;elements&#32;in&#32;the&#32;vector.</emphasis>
<anchor xml:id="_vector_8h_source_1l00065"/>00065 &#32;&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0">At</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index);
<anchor xml:id="_vector_8h_source_1l00066"/>00066 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0">At</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_vector_8h_source_1l00067"/>00067 
<anchor xml:id="_vector_8h_source_1l00068"/>00068 &#32;&#32;<emphasis role="comment">//&#32;Getting&#32;size&#32;and&#32;capacity&#32;of&#32;the&#32;vector.</emphasis>
<anchor xml:id="_vector_8h_source_1l00069"/>00069 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950">Size</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00070"/>00070 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab">Capacity</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00071"/>00071 
<anchor xml:id="_vector_8h_source_1l00072"/>00072 &#32;&#32;<emphasis role="comment">//&#32;Resizing&#32;and&#32;shrinking&#32;the&#32;vector.</emphasis>
<anchor xml:id="_vector_8h_source_1l00073"/>00073 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c">Resize</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;size);
<anchor xml:id="_vector_8h_source_1l00074"/>00074 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38">ShrinkToFit</link>();
<anchor xml:id="_vector_8h_source_1l00075"/>00075 
<anchor xml:id="_vector_8h_source_1l00076"/>00076 &#32;&#32;<emphasis role="comment">//&#32;Getting&#32;first&#32;and&#32;last&#32;element&#32;of&#32;the&#32;vector.</emphasis>
<anchor xml:id="_vector_8h_source_1l00077"/>00077 &#32;&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd">Front</link>();
<anchor xml:id="_vector_8h_source_1l00078"/>00078 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd">Front</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_vector_8h_source_1l00079"/>00079 &#32;&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68">Back</link>();
<anchor xml:id="_vector_8h_source_1l00080"/>00080 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68">Back</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_vector_8h_source_1l00081"/>00081 
<anchor xml:id="_vector_8h_source_1l00082"/>00082 &#32;&#32;<emphasis role="comment">//&#32;Destructor&#32;for&#32;the&#32;vector&#32;class.</emphasis>
<anchor xml:id="_vector_8h_source_1l00083"/>00083 &#32;&#32;<link linkend="_classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549">~Vector</link>()&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_vector_8h_source_1l00084"/>00084 
<anchor xml:id="_vector_8h_source_1l00085"/>00085 &#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_vector_8h_source_1l00086"/>00086 &#32;&#32;<emphasis role="comment">//&#32;Method&#32;that&#32;reallocates&#32;memory&#32;for&#32;the&#32;vector.</emphasis>
<anchor xml:id="_vector_8h_source_1l00087"/>00087 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Reallocate(<emphasis role="keywordtype">size_t</emphasis>&#32;amount);
<anchor xml:id="_vector_8h_source_1l00088"/>00088 
<anchor xml:id="_vector_8h_source_1l00092"/>00092 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;size;
<anchor xml:id="_vector_8h_source_1l00096"/>00096 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;capacity;
<anchor xml:id="_vector_8h_source_1l00097"/>00097 
<anchor xml:id="_vector_8h_source_1l00101"/>00101 &#32;&#32;T*&#32;data;
<anchor xml:id="_vector_8h_source_1l00102"/>00102 };
<anchor xml:id="_vector_8h_source_1l00103"/>00103 
<anchor xml:id="_vector_8h_source_1l00108"/>00108 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00109"/><link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">00109</link> <link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector&lt;T&gt;::Vector</link>()&#32;noexcept&#32;:&#32;size(0),&#32;capacity(0),&#32;data(<emphasis role="keywordtype">nullptr</emphasis>)&#32;{
<anchor xml:id="_vector_8h_source_1l00110"/>00110 &#32;&#32;Reallocate(4);
<anchor xml:id="_vector_8h_source_1l00111"/>00111 }
<anchor xml:id="_vector_8h_source_1l00112"/>00112 
<anchor xml:id="_vector_8h_source_1l00118"/>00118 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00119"/><link linkend="_classalglib_1_1_vector_1a08e67aca5cd89db29b6ac3d5e526d9d7">00119</link> <link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector&lt;T&gt;::Vector</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;elements)&#32;noexcept
<anchor xml:id="_vector_8h_source_1l00120"/>00120 &#32;&#32;&#32;&#32;:&#32;size(0),&#32;capacity(0),&#32;data(<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_vector_8h_source_1l00121"/>00121 &#32;&#32;Reallocate(elements);
<anchor xml:id="_vector_8h_source_1l00122"/>00122 }
<anchor xml:id="_vector_8h_source_1l00123"/>00123 
<anchor xml:id="_vector_8h_source_1l00132"/>00132 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00133"/><link linkend="_classalglib_1_1_vector_1a86cec3bbb884e34220eca1e0091046bf">00133</link> <link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector&lt;T&gt;::Vector</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;elements,&#32;<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value)&#32;noexcept
<anchor xml:id="_vector_8h_source_1l00134"/>00134 &#32;&#32;&#32;&#32;:&#32;size(0),&#32;capacity(0),&#32;data(<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_vector_8h_source_1l00135"/>00135 &#32;&#32;Reallocate(elements);
<anchor xml:id="_vector_8h_source_1l00136"/>00136 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i{};&#32;i&#32;&lt;&#32;capacity;&#32;++i)&#32;{
<anchor xml:id="_vector_8h_source_1l00137"/>00137 &#32;&#32;&#32;&#32;data[i]&#32;=&#32;value;
<anchor xml:id="_vector_8h_source_1l00138"/>00138 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00139"/>00139 }
<anchor xml:id="_vector_8h_source_1l00140"/>00140 
<anchor xml:id="_vector_8h_source_1l00146"/>00146 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00147"/><link linkend="_classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab">00147</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab">Vector&lt;T&gt;::Push</link>(<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_vector_8h_source_1l00148"/>00148 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;&gt;=&#32;capacity)&#32;{
<anchor xml:id="_vector_8h_source_1l00149"/>00149 &#32;&#32;&#32;&#32;Reallocate(capacity&#32;*&#32;2);
<anchor xml:id="_vector_8h_source_1l00150"/>00150 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00151"/>00151 &#32;&#32;data[size++]&#32;=&#32;value;
<anchor xml:id="_vector_8h_source_1l00152"/>00152 }
<anchor xml:id="_vector_8h_source_1l00153"/>00153 
<anchor xml:id="_vector_8h_source_1l00161"/>00161 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00162"/><link linkend="_classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d">00162</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d">Vector&lt;T&gt;::Insert</link>(<emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;value,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;index)&#32;{
<anchor xml:id="_vector_8h_source_1l00163"/>00163 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&gt;&#32;size)&#32;{
<anchor xml:id="_vector_8h_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1afcfcd5dc808b27df606d5761cb149bb9">errors::kIndexOutOfRange</link>);
<anchor xml:id="_vector_8h_source_1l00165"/>00165 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00166"/>00166 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(size&#32;+&#32;1&#32;&gt;&#32;capacity)&#32;{
<anchor xml:id="_vector_8h_source_1l00167"/>00167 &#32;&#32;&#32;&#32;Reallocate(capacity&#32;==&#32;0&#32;?&#32;1&#32;:&#32;capacity&#32;*&#32;2);
<anchor xml:id="_vector_8h_source_1l00168"/>00168 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00169"/>00169 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i{size};&#32;i&#32;&gt;&#32;index;&#32;--i)&#32;{
<anchor xml:id="_vector_8h_source_1l00170"/>00170 &#32;&#32;&#32;&#32;data[i]&#32;=&#32;data[i&#32;-&#32;1];
<anchor xml:id="_vector_8h_source_1l00171"/>00171 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00172"/>00172 &#32;&#32;data[index]&#32;=&#32;value;
<anchor xml:id="_vector_8h_source_1l00173"/>00173 &#32;&#32;size++;
<anchor xml:id="_vector_8h_source_1l00174"/>00174 }
<anchor xml:id="_vector_8h_source_1l00175"/>00175 
<anchor xml:id="_vector_8h_source_1l00181"/>00181 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00182"/><link linkend="_classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814">00182</link> T&amp;&#32;<link linkend="_classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814">Vector&lt;T&gt;::Pop</link>()&#32;{
<anchor xml:id="_vector_8h_source_1l00183"/>00183 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[size--];
<anchor xml:id="_vector_8h_source_1l00184"/>00184 }
<anchor xml:id="_vector_8h_source_1l00185"/>00185 
<anchor xml:id="_vector_8h_source_1l00192"/>00192 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00193"/><link linkend="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0">00193</link> T&amp;&#32;<link linkend="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0">Vector&lt;T&gt;::At</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)&#32;{
<anchor xml:id="_vector_8h_source_1l00194"/>00194 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&gt;=&#32;size)&#32;{
<anchor xml:id="_vector_8h_source_1l00195"/>00195 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1afcfcd5dc808b27df606d5761cb149bb9">errors::kIndexOutOfRange</link>);
<anchor xml:id="_vector_8h_source_1l00196"/>00196 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00197"/>00197 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[index];
<anchor xml:id="_vector_8h_source_1l00198"/>00198 }
<anchor xml:id="_vector_8h_source_1l00199"/>00199 
<anchor xml:id="_vector_8h_source_1l00206"/>00206 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00207"/><link linkend="_classalglib_1_1_vector_1a87e3eb027a77353a466a0b5821dd9c13">00207</link> <emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0">Vector&lt;T&gt;::At</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;index)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_vector_8h_source_1l00208"/>00208 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index&#32;&gt;=&#32;size)&#32;{
<anchor xml:id="_vector_8h_source_1l00209"/>00209 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1afcfcd5dc808b27df606d5761cb149bb9">errors::kIndexOutOfRange</link>);
<anchor xml:id="_vector_8h_source_1l00210"/>00210 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00211"/>00211 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[index];
<anchor xml:id="_vector_8h_source_1l00212"/>00212 }
<anchor xml:id="_vector_8h_source_1l00213"/>00213 
<anchor xml:id="_vector_8h_source_1l00218"/>00218 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00219"/><link linkend="_classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950">00219</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950">Vector&lt;T&gt;::Size</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_vector_8h_source_1l00220"/>00220 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;size;
<anchor xml:id="_vector_8h_source_1l00221"/>00221 }
<anchor xml:id="_vector_8h_source_1l00222"/>00222 
<anchor xml:id="_vector_8h_source_1l00227"/>00227 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00228"/><link linkend="_classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab">00228</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab">Vector&lt;T&gt;::Capacity</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_vector_8h_source_1l00229"/>00229 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;capacity;
<anchor xml:id="_vector_8h_source_1l00230"/>00230 }
<anchor xml:id="_vector_8h_source_1l00231"/>00231 
<anchor xml:id="_vector_8h_source_1l00238"/>00238 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00239"/><link linkend="_classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c">00239</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c">Vector&lt;T&gt;::Resize</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;size)&#32;{
<anchor xml:id="_vector_8h_source_1l00240"/>00240 &#32;&#32;Reallocate(size);
<anchor xml:id="_vector_8h_source_1l00241"/>00241 }
<anchor xml:id="_vector_8h_source_1l00242"/>00242 
<anchor xml:id="_vector_8h_source_1l00247"/>00247 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00248"/><link linkend="_classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38">00248</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38">Vector&lt;T&gt;::ShrinkToFit</link>()&#32;{
<anchor xml:id="_vector_8h_source_1l00249"/>00249 &#32;&#32;Reallocate(size);
<anchor xml:id="_vector_8h_source_1l00250"/>00250 }
<anchor xml:id="_vector_8h_source_1l00251"/>00251 
<anchor xml:id="_vector_8h_source_1l00256"/>00256 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00257"/><link linkend="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd">00257</link> T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd">Vector&lt;T&gt;::Front</link>()&#32;{
<anchor xml:id="_vector_8h_source_1l00258"/>00258 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[0];
<anchor xml:id="_vector_8h_source_1l00259"/>00259 }
<anchor xml:id="_vector_8h_source_1l00260"/>00260 
<anchor xml:id="_vector_8h_source_1l00265"/>00265 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00266"/><link linkend="_classalglib_1_1_vector_1a41f322b7e4d3b5431b461590020a2cb3">00266</link> <emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd">Vector&lt;T&gt;::Front</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_vector_8h_source_1l00267"/>00267 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[0];
<anchor xml:id="_vector_8h_source_1l00268"/>00268 }
<anchor xml:id="_vector_8h_source_1l00269"/>00269 
<anchor xml:id="_vector_8h_source_1l00274"/>00274 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00275"/><link linkend="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68">00275</link> T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68">Vector&lt;T&gt;::Back</link>()&#32;{
<anchor xml:id="_vector_8h_source_1l00276"/>00276 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[size&#32;-&#32;1];
<anchor xml:id="_vector_8h_source_1l00277"/>00277 }
<anchor xml:id="_vector_8h_source_1l00278"/>00278 
<anchor xml:id="_vector_8h_source_1l00283"/>00283 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00284"/><link linkend="_classalglib_1_1_vector_1a94a50e79ab5cbfc2525a2dca2dca46e7">00284</link> <emphasis role="keyword">const</emphasis>&#32;T&amp;&#32;<link linkend="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68">Vector&lt;T&gt;::Back</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_vector_8h_source_1l00285"/>00285 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;data[size&#32;-&#32;1];
<anchor xml:id="_vector_8h_source_1l00286"/>00286 }
<anchor xml:id="_vector_8h_source_1l00287"/>00287 
<anchor xml:id="_vector_8h_source_1l00291"/>00291 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00292"/><link linkend="_classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549">00292</link> <link linkend="_classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549">Vector&lt;T&gt;::~Vector</link>()&#32;noexcept&#32;{
<anchor xml:id="_vector_8h_source_1l00293"/>00293 &#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;data;
<anchor xml:id="_vector_8h_source_1l00294"/>00294 }
<anchor xml:id="_vector_8h_source_1l00295"/>00295 
<anchor xml:id="_vector_8h_source_1l00302"/>00302 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_vector_8h_source_1l00303"/>00303 <emphasis role="keywordtype">void</emphasis>&#32;Vector&lt;T&gt;::Reallocate(<emphasis role="keywordtype">size_t</emphasis>&#32;amount)&#32;{
<anchor xml:id="_vector_8h_source_1l00304"/>00304 &#32;&#32;T*&#32;new_data{<emphasis role="keyword">new</emphasis>&#32;T[amount]};
<anchor xml:id="_vector_8h_source_1l00305"/>00305 &#32;&#32;size&#32;=&#32;(amount&#32;&lt;&#32;size)&#32;?&#32;amount&#32;:&#32;size;
<anchor xml:id="_vector_8h_source_1l00306"/>00306 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i{};&#32;i&#32;&lt;&#32;size;&#32;++i)&#32;{
<anchor xml:id="_vector_8h_source_1l00307"/>00307 &#32;&#32;&#32;&#32;new_data[i]&#32;=&#32;data[i];
<anchor xml:id="_vector_8h_source_1l00308"/>00308 &#32;&#32;}
<anchor xml:id="_vector_8h_source_1l00309"/>00309 &#32;&#32;<emphasis role="keyword">delete</emphasis>[]&#32;data;
<anchor xml:id="_vector_8h_source_1l00310"/>00310 &#32;&#32;data&#32;=&#32;new_data;
<anchor xml:id="_vector_8h_source_1l00311"/>00311 &#32;&#32;capacity&#32;=&#32;amount;
<anchor xml:id="_vector_8h_source_1l00312"/>00312 }
<anchor xml:id="_vector_8h_source_1l00313"/>00313 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;alglib</emphasis>
<anchor xml:id="_vector_8h_source_1l00314"/>00314 
<anchor xml:id="_vector_8h_source_1l00315"/>00315 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">//&#32;ALGLIB_INCLUDE_VECTOR_H_</emphasis>
</programlisting></section>
