<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classalglib_1_1_circular_queue" xml:lang="en-US">
<title>alglib::CircularQueue&lt; T, capacity &gt; Class Template Reference</title>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary></indexterm>
<para>

<para><link linkend="_classalglib_1_1_circular_queue">CircularQueue</link> class is a queue data structure implemented using an array. It doesn&apos;t allocate memory on the heap and has a fixed capacity that has to be defined at compile time. It uses a circular buffer to store elements. </para>
 
</para>
<para>
<computeroutput>#include &lt;circular_queue.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classalglib_1_1_circular_queue_1a81425891cdd65d62b9bd9c9376e12198">CircularQueue</link> ()</para>

<para>Constructor for the <link linkend="_classalglib_1_1_circular_queue">CircularQueue</link>. It initializes the front index and size to 0. </para>
</listitem>
            <listitem><para>bool <link linkend="_classalglib_1_1_circular_queue_1a58ec08c9d85e6bec314d4ff3029cdb47">IsEmpty</link> () const noexcept</para>

<para>Checks if the queue is empty by checking the size value. If size is 0, the queue is empty. </para>
</listitem>
            <listitem><para>bool <link linkend="_classalglib_1_1_circular_queue_1a8338ef10126aaf2ebba8fc45fb1c20ac">IsFull</link> () const noexcept</para>

<para>Checks if the queue is full by comparing the size value to the capacity. </para>
</listitem>
            <listitem><para>T <link linkend="_classalglib_1_1_circular_queue_1af04bc56989815eed13eb54ec728baa51">Dequeue</link> ()</para>

<para>Gets the value from the front of the queue and moves the front index to the next element. If the queue is empty (size == 0), it throws a runtime error. </para>
</listitem>
            <listitem><para>void <link linkend="_classalglib_1_1_circular_queue_1a09c519561d0aa01069ca8c882d895e10">Enqueue</link> (T value)</para>

<para>Adds a new value to the rear of the queue. If the queue is full, it throws a runtime error. Size is increased by 1. </para>
</listitem>
            <listitem><para>T <link linkend="_classalglib_1_1_circular_queue_1a8288efa851f8f72dbafc3a4f757876a4">PeekFront</link> () const</para>

<para>Gets the value from the front without moving the front index. </para>
</listitem>
            <listitem><para>T <link linkend="_classalglib_1_1_circular_queue_1a3e06f1ebd1c2ca6c4368786096c796d0">PeekRear</link> () const</para>

<para>Gets value from the rear of the queue without changing the size of the queue. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T, size_t capacity&gt;<?linebreak?>class alglib::CircularQueue&lt; T, capacity &gt;</title></simplesect>

<para><link linkend="_classalglib_1_1_circular_queue">CircularQueue</link> class is a queue data structure implemented using an array. It doesn&apos;t allocate memory on the heap and has a fixed capacity that has to be defined at compile time. It uses a circular buffer to store elements. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>type that will be stored in queue.</para>
</entry>
                            </row>
                            <row>
<entry>capacity</entry><entry>
<para>max capacity of queue.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00056">56</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classalglib_1_1_circular_queue_1a81425891cdd65d62b9bd9c9376e12198"/><section>
    <title>CircularQueue()</title>
<indexterm><primary>CircularQueue</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>CircularQueue</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput><link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::CircularQueue ( )</computeroutput></para><para>

<para>Constructor for the <link linkend="_classalglib_1_1_circular_queue">CircularQueue</link>. It initializes the front index and size to 0. </para>
</para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00091">91</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classalglib_1_1_circular_queue_1af04bc56989815eed13eb54ec728baa51"/><section>
    <title>Dequeue()</title>
<indexterm><primary>Dequeue</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>Dequeue</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput>T <link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::Dequeue ( )</computeroutput></para><para>

<para>Gets the value from the front of the queue and moves the front index to the next element. If the queue is empty (size == 0), it throws a runtime error. </para>
</para>

<para><formalpara><title>Returns</title>

<para>value of front element in queue.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00118">118</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_circular_queue_1a09c519561d0aa01069ca8c882d895e10"/><section>
    <title>Enqueue()</title>
<indexterm><primary>Enqueue</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>Enqueue</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput>void <link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::Enqueue (T value)</computeroutput></para><para>

<para>Adds a new value to the rear of the queue. If the queue is full, it throws a runtime error. Size is increased by 1. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>value to be inserted into queue.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00134">134</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_circular_queue_1a58ec08c9d85e6bec314d4ff3029cdb47"/><section>
    <title>IsEmpty()</title>
<indexterm><primary>IsEmpty</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>IsEmpty</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput>bool <link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::IsEmpty ( ) const<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Checks if the queue is empty by checking the size value. If size is 0, the queue is empty. </para>
</para>

<para><formalpara><title>Returns</title>

<para>true if empty, false if not.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00099">99</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_circular_queue_1a8338ef10126aaf2ebba8fc45fb1c20ac"/><section>
    <title>IsFull()</title>
<indexterm><primary>IsFull</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>IsFull</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput>bool <link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::IsFull ( ) const<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Checks if the queue is full by comparing the size value to the capacity. </para>
</para>

<para><formalpara><title>Returns</title>

<para>true if full, false if not</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00108">108</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_circular_queue_1a8288efa851f8f72dbafc3a4f757876a4"/><section>
    <title>PeekFront()</title>
<indexterm><primary>PeekFront</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>PeekFront</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput>T <link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::PeekFront ( ) const</computeroutput></para><para>

<para>Gets the value from the front without moving the front index. </para>
</para>

<para><formalpara><title>Returns</title>

<para>value from the front of the queue.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00148">148</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_circular_queue_1a3e06f1ebd1c2ca6c4368786096c796d0"/><section>
    <title>PeekRear()</title>
<indexterm><primary>PeekRear</primary><secondary>alglib::CircularQueue&lt; T, capacity &gt;</secondary></indexterm>
<indexterm><primary>alglib::CircularQueue&lt; T, capacity &gt;</primary><secondary>PeekRear</secondary></indexterm>
<computeroutput>template&lt;typename T, size_t capacity&gt; </computeroutput><para><computeroutput>T <link linkend="_classalglib_1_1_circular_queue">alglib::CircularQueue</link>&lt; T, capacity &gt;::PeekRear ( ) const</computeroutput></para><para>

<para>Gets value from the rear of the queue without changing the size of the queue. </para>
</para>

<para><formalpara><title>Returns</title>

<para>value from the rear of the queue.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_circular__queue_8h_source_1l00161">161</link> of file <link linkend="_circular__queue_8h_source">circular_queue.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Include/<link linkend="_circular__queue_8h">circular_queue.h</link></section>
</section>
