<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_sll__stack_8h_source" xml:lang="en-US">
<title>sll_stack.h</title>
<indexterm><primary>Include/sll_stack.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_sll__stack_8h_source_1l00001"/>00001 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00002"/>00002 <emphasis role="comment">//&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00004"/>00004 <emphasis role="comment">//&#32;Copyright&#32;©&#32;2024&#32;Piotr&#32;Walczak</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00005"/>00005 <emphasis role="comment">//</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00006"/>00006 <emphasis role="comment">//&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00007"/>00007 <emphasis role="comment">//&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;“Software”),&#32;to</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00008"/>00008 <emphasis role="comment">//&#32;deal&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00009"/>00009 <emphasis role="comment">//&#32;rights&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00010"/>00010 <emphasis role="comment">//&#32;sell&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00011"/>00011 <emphasis role="comment">//&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00012"/>00012 <emphasis role="comment">//</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00013"/>00013 <emphasis role="comment">//&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00014"/>00014 <emphasis role="comment">//&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00015"/>00015 <emphasis role="comment">//</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00016"/>00016 <emphasis role="comment">//&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;“AS&#32;IS”,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00017"/>00017 <emphasis role="comment">//&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00018"/>00018 <emphasis role="comment">//&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00019"/>00019 <emphasis role="comment">//&#32;THE&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00020"/>00020 <emphasis role="comment">//&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00021"/>00021 <emphasis role="comment">//&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00022"/>00022 <emphasis role="comment">//&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00023"/>00023 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00024"/>00024 
<anchor xml:id="_sll__stack_8h_source_1l00025"/>00025 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00026"/>00026 <emphasis role="comment">//&#32;File:&#32;sll_stack.h</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00027"/>00027 <emphasis role="comment">//</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00028"/>00028 <emphasis role="comment">//&#32;This&#32;file&#32;contains&#32;the&#32;implementation&#32;of&#32;the&#32;ListStack&#32;class.&#32;Implementation</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00029"/>00029 <emphasis role="comment">//&#32;is&#32;based&#32;on&#32;templates,&#32;so&#32;the&#32;class&#32;can&#32;be&#32;used&#32;with&#32;any&#32;type.&#32;ListStack</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00030"/>00030 <emphasis role="comment">//&#32;is&#32;a&#32;stack&#32;implementation&#32;that&#32;uses&#32;a&#32;singly&#32;linked&#32;list&#32;as&#32;a&#32;base&#32;structure.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00031"/>00031 <emphasis role="comment">//&#32;It&#32;allocates&#32;memory&#32;on&#32;the&#32;heap,&#32;so&#32;the&#32;stack&#32;can&#32;grow&#32;dynamically.&#32;The&#32;class</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00032"/>00032 <emphasis role="comment">//&#32;is&#32;implemented&#32;in&#32;the&#32;alglib&#32;namespace.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00033"/>00033 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00034"/>00034 
<anchor xml:id="_sll__stack_8h_source_1l00035"/>00035 <emphasis role="preprocessor">#ifndef&#32;ALGLIB_INCLUDE_LISTSTACK_H_</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00036"/>00036 <emphasis role="preprocessor">#define&#32;ALGLIB_INCLUDE_LISTSTACK_H_</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00037"/>00037 
<anchor xml:id="_sll__stack_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00039"/>00039 
<anchor xml:id="_sll__stack_8h_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_constants_8h">constants.h</link>&quot;</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00041"/>00041 
<anchor xml:id="_sll__stack_8h_source_1l00045"/>00045 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacealglib">alglib</link>&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00046"/>00046 
<anchor xml:id="_sll__stack_8h_source_1l00053"/>00053 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00054"/><link linkend="_classalglib_1_1_s_l_l_stack">00054</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classalglib_1_1_s_l_l_stack_1ae9c43c9d3e8dfca71d83428fc22f2893">SLLStack</link>&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00055"/>00055 &#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_sll__stack_8h_source_1l00056"/>00056 &#32;&#32;<emphasis role="comment">//&#32;Constructor&#32;for&#32;the&#32;ArrayStack.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00057"/>00057 &#32;&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1ae9c43c9d3e8dfca71d83428fc22f2893">SLLStack</link>();
<anchor xml:id="_sll__stack_8h_source_1l00058"/>00058 
<anchor xml:id="_sll__stack_8h_source_1l00059"/>00059 &#32;&#32;<emphasis role="comment">//&#32;Methods&#32;for&#32;manipulating&#32;the&#32;stack.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00060"/>00060 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a2d42e7b987f895deae7738b2cf3b6399">Push</link>(T&#32;val)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_sll__stack_8h_source_1l00061"/>00061 &#32;&#32;T&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a7af12c188430bee708b78c9c9d22a833">Pop</link>();
<anchor xml:id="_sll__stack_8h_source_1l00062"/>00062 &#32;&#32;T&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a54548b10e2114a7c43329118d411f966">Top</link>()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_sll__stack_8h_source_1l00063"/>00063 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861">IsEmpty</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_sll__stack_8h_source_1l00064"/>00064 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a93f1413805738dc3d94092ab4efc8a1d">Size</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_sll__stack_8h_source_1l00065"/>00065 
<anchor xml:id="_sll__stack_8h_source_1l00066"/>00066 &#32;&#32;<emphasis role="comment">//&#32;Destructor&#32;for&#32;the&#32;ArrayStack.</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00067"/>00067 &#32;&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a12999b6099d1d7939da4bd9e698bfcb3">~SLLStack</link>();
<anchor xml:id="_sll__stack_8h_source_1l00068"/>00068 
<anchor xml:id="_sll__stack_8h_source_1l00069"/>00069 &#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_sll__stack_8h_source_1l00074"/>00074 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>Node&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00075"/>00075 &#32;&#32;&#32;&#32;Node(T&#32;data);
<anchor xml:id="_sll__stack_8h_source_1l00076"/>00076 &#32;&#32;&#32;&#32;T&#32;data;
<anchor xml:id="_sll__stack_8h_source_1l00077"/>00077 &#32;&#32;&#32;&#32;Node&#32;*next;
<anchor xml:id="_sll__stack_8h_source_1l00078"/>00078 &#32;&#32;};
<anchor xml:id="_sll__stack_8h_source_1l00079"/>00079 
<anchor xml:id="_sll__stack_8h_source_1l00083"/>00083 &#32;&#32;Node&#32;*top;
<anchor xml:id="_sll__stack_8h_source_1l00084"/>00084 };
<anchor xml:id="_sll__stack_8h_source_1l00085"/>00085 
<anchor xml:id="_sll__stack_8h_source_1l00090"/>00090 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00091"/>00091 SLLStack&lt;T&gt;::Node::Node(T&#32;data)&#32;:&#32;data(data),&#32;next(nullptr)&#32;{}
<anchor xml:id="_sll__stack_8h_source_1l00092"/>00092 
<anchor xml:id="_sll__stack_8h_source_1l00096"/>00096 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00097"/><link linkend="_classalglib_1_1_s_l_l_stack_1ae9c43c9d3e8dfca71d83428fc22f2893">00097</link> <link linkend="_classalglib_1_1_s_l_l_stack_1ae9c43c9d3e8dfca71d83428fc22f2893">SLLStack&lt;T&gt;::SLLStack</link>()&#32;:&#32;top(nullptr)&#32;{}
<anchor xml:id="_sll__stack_8h_source_1l00098"/>00098 
<anchor xml:id="_sll__stack_8h_source_1l00105"/>00105 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00106"/><link linkend="_classalglib_1_1_s_l_l_stack_1a2d42e7b987f895deae7738b2cf3b6399">00106</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a2d42e7b987f895deae7738b2cf3b6399">SLLStack&lt;T&gt;::Push</link>(T&#32;val)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00107"/>00107 &#32;&#32;Node&#32;*new_node{<emphasis role="keyword">new</emphasis>&#32;Node(val)};
<anchor xml:id="_sll__stack_8h_source_1l00108"/>00108 &#32;&#32;new_node-&gt;next&#32;=&#32;top;
<anchor xml:id="_sll__stack_8h_source_1l00109"/>00109 &#32;&#32;top&#32;=&#32;new_node;
<anchor xml:id="_sll__stack_8h_source_1l00110"/>00110 }
<anchor xml:id="_sll__stack_8h_source_1l00111"/>00111 
<anchor xml:id="_sll__stack_8h_source_1l00117"/>00117 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00118"/><link linkend="_classalglib_1_1_s_l_l_stack_1a7af12c188430bee708b78c9c9d22a833">00118</link> T&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a7af12c188430bee708b78c9c9d22a833">SLLStack&lt;T&gt;::Pop</link>()&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00119"/>00119 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861">IsEmpty</link>())&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00120"/>00120 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1a702e2c90c47734fc2bb07d6b773968a9">errors::kEmptyDeletion</link>);
<anchor xml:id="_sll__stack_8h_source_1l00121"/>00121 &#32;&#32;}
<anchor xml:id="_sll__stack_8h_source_1l00122"/>00122 &#32;&#32;T&#32;val{top-&gt;data};
<anchor xml:id="_sll__stack_8h_source_1l00123"/>00123 &#32;&#32;Node&#32;*tmp{top};
<anchor xml:id="_sll__stack_8h_source_1l00124"/>00124 &#32;&#32;top&#32;=&#32;top-&gt;next;
<anchor xml:id="_sll__stack_8h_source_1l00125"/>00125 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;tmp;
<anchor xml:id="_sll__stack_8h_source_1l00126"/>00126 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;val;
<anchor xml:id="_sll__stack_8h_source_1l00127"/>00127 }
<anchor xml:id="_sll__stack_8h_source_1l00128"/>00128 
<anchor xml:id="_sll__stack_8h_source_1l00133"/>00133 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00134"/><link linkend="_classalglib_1_1_s_l_l_stack_1a54548b10e2114a7c43329118d411f966">00134</link> T&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a54548b10e2114a7c43329118d411f966">SLLStack&lt;T&gt;::Top</link>()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_sll__stack_8h_source_1l00135"/>00135 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861">IsEmpty</link>())&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00136"/>00136 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1a17e2c854e211caaaa784ef32ecea9961">errors::kPeekAtEmpty</link>);
<anchor xml:id="_sll__stack_8h_source_1l00137"/>00137 &#32;&#32;}
<anchor xml:id="_sll__stack_8h_source_1l00138"/>00138 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;top-&gt;data;
<anchor xml:id="_sll__stack_8h_source_1l00139"/>00139 }
<anchor xml:id="_sll__stack_8h_source_1l00140"/>00140 
<anchor xml:id="_sll__stack_8h_source_1l00145"/>00145 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00146"/><link linkend="_classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861">00146</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861">SLLStack&lt;T&gt;::IsEmpty</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;top&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_sll__stack_8h_source_1l00148"/>00148 }
<anchor xml:id="_sll__stack_8h_source_1l00149"/>00149 
<anchor xml:id="_sll__stack_8h_source_1l00154"/>00154 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00155"/><link linkend="_classalglib_1_1_s_l_l_stack_1a93f1413805738dc3d94092ab4efc8a1d">00155</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_s_l_l_stack_1a93f1413805738dc3d94092ab4efc8a1d">SLLStack&lt;T&gt;::Size</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00156"/>00156 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count{};
<anchor xml:id="_sll__stack_8h_source_1l00157"/>00157 &#32;&#32;Node&#32;*tmp{top};
<anchor xml:id="_sll__stack_8h_source_1l00158"/>00158 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp)&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00159"/>00159 &#32;&#32;&#32;&#32;++count;
<anchor xml:id="_sll__stack_8h_source_1l00160"/>00160 &#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp-&gt;next;
<anchor xml:id="_sll__stack_8h_source_1l00161"/>00161 &#32;&#32;}
<anchor xml:id="_sll__stack_8h_source_1l00162"/>00162 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;count;
<anchor xml:id="_sll__stack_8h_source_1l00163"/>00163 }
<anchor xml:id="_sll__stack_8h_source_1l00164"/>00164 
<anchor xml:id="_sll__stack_8h_source_1l00168"/>00168 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_sll__stack_8h_source_1l00169"/><link linkend="_classalglib_1_1_s_l_l_stack_1a12999b6099d1d7939da4bd9e698bfcb3">00169</link> <link linkend="_classalglib_1_1_s_l_l_stack_1a12999b6099d1d7939da4bd9e698bfcb3">SLLStack&lt;T&gt;::~SLLStack</link>()&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00170"/>00170 &#32;&#32;Node&#32;*tmp{top};
<anchor xml:id="_sll__stack_8h_source_1l00171"/>00171 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp)&#32;{
<anchor xml:id="_sll__stack_8h_source_1l00172"/>00172 &#32;&#32;&#32;&#32;Node&#32;*next{tmp-&gt;next};
<anchor xml:id="_sll__stack_8h_source_1l00173"/>00173 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;tmp;
<anchor xml:id="_sll__stack_8h_source_1l00174"/>00174 &#32;&#32;&#32;&#32;tmp&#32;=&#32;next;
<anchor xml:id="_sll__stack_8h_source_1l00175"/>00175 &#32;&#32;}
<anchor xml:id="_sll__stack_8h_source_1l00176"/>00176 }
<anchor xml:id="_sll__stack_8h_source_1l00177"/>00177 
<anchor xml:id="_sll__stack_8h_source_1l00178"/>00178 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;alglib</emphasis>
<anchor xml:id="_sll__stack_8h_source_1l00179"/>00179 
<anchor xml:id="_sll__stack_8h_source_1l00180"/>00180 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">//&#32;ALGLIB_INCLUDE_LISTSTACK_H_</emphasis>
</programlisting></section>
