<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classalglib_1_1_vector" kind="class" language="C++" prot="public">
    <compoundname>alglib::Vector</compoundname>
    <includes refid="vector_8h" local="no">vector.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classalglib_1_1_vector_1a8c687f63d2fe47d9c90aea27b2a965c9" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t alglib::Vector&lt; T &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>alglib::Vector::size</qualifiedname>
        <briefdescription>
<para>Amount of elements in the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="92" column="10" bodyfile="Include/vector.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalglib_1_1_vector_1a8c158789b1618f5835b189f78df5daba" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t alglib::Vector&lt; T &gt;::capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <qualifiedname>alglib::Vector::capacity</qualifiedname>
        <briefdescription>
<para>Maximum capacity of the vector. It grows when the size exceeds capacity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="96" column="10" bodyfile="Include/vector.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalglib_1_1_vector_1ad2e9553355676e974d7c61af088ed159" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* alglib::Vector&lt; T &gt;::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>alglib::Vector::data</qualifiedname>
        <briefdescription>
<para>Array that holds the data of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="101" column="5" bodyfile="Include/vector.h" bodystart="101" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>alglib::Vector&lt; T &gt;::Vector</definition>
        <argsstring>() noexcept</argsstring>
        <name>Vector</name>
        <qualifiedname>alglib::Vector::Vector</qualifiedname>
        <briefdescription>
<para>No argument constructor for the vector class. It initializes the vector with default values. It allocates memory for 4 elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="55" column="3" bodyfile="Include/vector.h" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a08e67aca5cd89db29b6ac3d5e526d9d7" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>alglib::Vector&lt; T &gt;::Vector</definition>
        <argsstring>(size_t elements) noexcept</argsstring>
        <name>Vector</name>
        <qualifiedname>alglib::Vector::Vector</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
<para>Constructor that initializes the vector with a given number of elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of elements that will be initially allocated.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="56" column="3" bodyfile="Include/vector.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a86cec3bbb884e34220eca1e0091046bf" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>alglib::Vector&lt; T &gt;::Vector</definition>
        <argsstring>(size_t elements, const T &amp;value) noexcept</argsstring>
        <name>Vector</name>
        <qualifiedname>alglib::Vector::Vector</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>elements</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructor that initializes the vector to a given number of elements with a given value. All elements will be set to the given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of elements that will be initially allocated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value that all the elements will be initialised to.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="57" column="3" bodyfile="Include/vector.h" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::Vector&lt; T &gt;::Push</definition>
        <argsstring>(const T &amp;value) noexcept</argsstring>
        <name>Push</name>
        <qualifiedname>alglib::Vector::Push</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a new element to the end of the vector. If the size exceeds the capacity, the capacity is doubled. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be added.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="60" column="8" bodyfile="Include/vector.h" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::Vector&lt; T &gt;::Insert</definition>
        <argsstring>(const T &amp;value, size_t index)</argsstring>
        <name>Insert</name>
        <qualifiedname>alglib::Vector::Insert</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Inserts a new element at a given index. If the index is out of range, an exception is thrown. If the size exceeds the capacity, the capacity is doubled just like in the Push method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be inserted.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>inserting position.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="61" column="8" bodyfile="Include/vector.h" bodystart="162" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; alglib::Vector&lt; T &gt;::Pop</definition>
        <argsstring>()</argsstring>
        <name>Pop</name>
        <qualifiedname>alglib::Vector::Pop</qualifiedname>
        <briefdescription>
<para>Returns the last element of the vector and removes it from the vector by decrementing the size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>last element of the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="62" column="5" bodyfile="Include/vector.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; alglib::Vector&lt; T &gt;::At</definition>
        <argsstring>(size_t index)</argsstring>
        <name>At</name>
        <qualifiedname>alglib::Vector::At</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the element at a given index. If the index is out of range, an exception is thrown. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of element to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>element at a given index.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="65" column="5" bodyfile="Include/vector.h" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a87e3eb027a77353a466a0b5821dd9c13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; alglib::Vector&lt; T &gt;::At</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>At</name>
        <qualifiedname>alglib::Vector::At</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the element at a given index. If the index is out of range, an exception is thrown. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index of element to return.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>element at a given index.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="66" column="11" bodyfile="Include/vector.h" bodystart="207" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t alglib::Vector&lt; T &gt;::Size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Size</name>
        <qualifiedname>alglib::Vector::Size</qualifiedname>
        <briefdescription>
<para>Return amount of elements in the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>amount of elements in the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="69" column="10" bodyfile="Include/vector.h" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t alglib::Vector&lt; T &gt;::Capacity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Capacity</name>
        <qualifiedname>alglib::Vector::Capacity</qualifiedname>
        <briefdescription>
<para>Returns current maximum capacity of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current maximum capacity of the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="70" column="10" bodyfile="Include/vector.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::Vector&lt; T &gt;::Resize</definition>
        <argsstring>(size_t size)</argsstring>
        <name>Resize</name>
        <qualifiedname>alglib::Vector::Resize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Modifies the size of the vector. If the new size is smaller than the current size, the vector is truncated. If the new size is larger than the current size, the vector is extended. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>new size.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="73" column="8" bodyfile="Include/vector.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::Vector&lt; T &gt;::ShrinkToFit</definition>
        <argsstring>()</argsstring>
        <name>ShrinkToFit</name>
        <qualifiedname>alglib::Vector::ShrinkToFit</qualifiedname>
        <briefdescription>
<para>Shrinks the capacity of the vector to the current size by reallocating memory with the size of the vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="74" column="8" bodyfile="Include/vector.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; alglib::Vector&lt; T &gt;::Front</definition>
        <argsstring>()</argsstring>
        <name>Front</name>
        <qualifiedname>alglib::Vector::Front</qualifiedname>
        <briefdescription>
<para>Returns the first element of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>first element of the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="77" column="5" bodyfile="Include/vector.h" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a41f322b7e4d3b5431b461590020a2cb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; alglib::Vector&lt; T &gt;::Front</definition>
        <argsstring>() const</argsstring>
        <name>Front</name>
        <qualifiedname>alglib::Vector::Front</qualifiedname>
        <briefdescription>
<para>Returns the first element of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>first element of the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="78" column="11" bodyfile="Include/vector.h" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; alglib::Vector&lt; T &gt;::Back</definition>
        <argsstring>()</argsstring>
        <name>Back</name>
        <qualifiedname>alglib::Vector::Back</qualifiedname>
        <briefdescription>
<para>Returns the last element of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>last element of the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="79" column="5" bodyfile="Include/vector.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a94a50e79ab5cbfc2525a2dca2dca46e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; alglib::Vector&lt; T &gt;::Back</definition>
        <argsstring>() const</argsstring>
        <name>Back</name>
        <qualifiedname>alglib::Vector::Back</qualifiedname>
        <briefdescription>
<para>Returns the last element of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>last element of the vector.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="80" column="11" bodyfile="Include/vector.h" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>alglib::Vector&lt; T &gt;::~Vector</definition>
        <argsstring>() noexcept</argsstring>
        <name>~Vector</name>
        <qualifiedname>alglib::Vector::~Vector</qualifiedname>
        <briefdescription>
<para>Deletes the vector and deallocates memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="83" column="3" bodyfile="Include/vector.h" bodystart="292" bodyend="294"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classalglib_1_1_vector_1ad8f5770422e45a956b4e4ac6999f9ec5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::Vector&lt; T &gt;::Reallocate</definition>
        <argsstring>(size_t amount)</argsstring>
        <name>Reallocate</name>
        <qualifiedname>alglib::Vector::Reallocate</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Reallocates memory for the vector. It copies all the elements from the old array to the new array. If the new capacity is smaller than the current size, the size is truncated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>new amount of elements.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/vector.h" line="87" column="8" bodyfile="Include/vector.h" bodystart="303" bodyend="312"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Template based vector implementation that uses an array as a base structure. It allocates memory on the heap, and it can grow dynamically. Capacity doubles every time the size exceeds current capacity. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of data stored in vector.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="Include/vector.h" line="52" column="1" bodyfile="Include/vector.h" bodystart="52" bodyend="102"/>
    <listofallmembers>
      <member refid="classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>At</name></member>
      <member refid="classalglib_1_1_vector_1a87e3eb027a77353a466a0b5821dd9c13" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>At</name></member>
      <member refid="classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Back</name></member>
      <member refid="classalglib_1_1_vector_1a94a50e79ab5cbfc2525a2dca2dca46e7" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Back</name></member>
      <member refid="classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Capacity</name></member>
      <member refid="classalglib_1_1_vector_1a8c158789b1618f5835b189f78df5daba" prot="private" virt="non-virtual"><scope>alglib::Vector</scope><name>capacity</name></member>
      <member refid="classalglib_1_1_vector_1ad2e9553355676e974d7c61af088ed159" prot="private" virt="non-virtual"><scope>alglib::Vector</scope><name>data</name></member>
      <member refid="classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Front</name></member>
      <member refid="classalglib_1_1_vector_1a41f322b7e4d3b5431b461590020a2cb3" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Front</name></member>
      <member refid="classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Insert</name></member>
      <member refid="classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Pop</name></member>
      <member refid="classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Push</name></member>
      <member refid="classalglib_1_1_vector_1ad8f5770422e45a956b4e4ac6999f9ec5" prot="private" virt="non-virtual"><scope>alglib::Vector</scope><name>Reallocate</name></member>
      <member refid="classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Resize</name></member>
      <member refid="classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>ShrinkToFit</name></member>
      <member refid="classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Size</name></member>
      <member refid="classalglib_1_1_vector_1a8c687f63d2fe47d9c90aea27b2a965c9" prot="private" virt="non-virtual"><scope>alglib::Vector</scope><name>size</name></member>
      <member refid="classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Vector</name></member>
      <member refid="classalglib_1_1_vector_1a08e67aca5cd89db29b6ac3d5e526d9d7" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Vector</name></member>
      <member refid="classalglib_1_1_vector_1a86cec3bbb884e34220eca1e0091046bf" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>Vector</name></member>
      <member refid="classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549" prot="public" virt="non-virtual"><scope>alglib::Vector</scope><name>~Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
