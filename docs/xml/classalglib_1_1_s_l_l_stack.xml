<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classalglib_1_1_s_l_l_stack" kind="class" language="C++" prot="public">
    <compoundname>alglib::SLLStack</compoundname>
    <includes refid="sll__stack_8h" local="no">sll_stack.h</includes>
    <innerclass refid="structalglib_1_1_s_l_l_stack_1_1_node" prot="private">alglib::SLLStack::Node</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classalglib_1_1_s_l_l_stack_1a7723fbfe35e10019f5c313b756e868e6" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* alglib::SLLStack&lt; T &gt;::top</definition>
        <argsstring></argsstring>
        <name>top</name>
        <qualifiedname>alglib::SLLStack::top</qualifiedname>
        <briefdescription>
<para>Pointer to the top element of the stack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="83" column="8" bodyfile="Include/sll_stack.h" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1ae9c43c9d3e8dfca71d83428fc22f2893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alglib::SLLStack&lt; T &gt;::SLLStack</definition>
        <argsstring>()</argsstring>
        <name>SLLStack</name>
        <qualifiedname>alglib::SLLStack::SLLStack</qualifiedname>
        <briefdescription>
<para>Constructor for the <ref refid="classalglib_1_1_s_l_l_stack" kindref="compound">SLLStack</ref>. Initializes the top pointer to nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="57" column="3" bodyfile="Include/sll_stack.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1a2d42e7b987f895deae7738b2cf3b6399" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::SLLStack&lt; T &gt;::Push</definition>
        <argsstring>(T val) noexcept</argsstring>
        <name>Push</name>
        <qualifiedname>alglib::SLLStack::Push</qualifiedname>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Pushes a value to the top of the stack by creating a new node on the heap and setting the next pointer to the current top. The top pointer is then set to the new node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be pushed on the stack.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="60" column="8" bodyfile="Include/sll_stack.h" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1a7af12c188430bee708b78c9c9d22a833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T alglib::SLLStack&lt; T &gt;::Pop</definition>
        <argsstring>()</argsstring>
        <name>Pop</name>
        <qualifiedname>alglib::SLLStack::Pop</qualifiedname>
        <briefdescription>
<para>Pops the value from the top of the stack and returns it. The top node is deleted. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>value on top of the stack.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="61" column="5" bodyfile="Include/sll_stack.h" bodystart="118" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1a54548b10e2114a7c43329118d411f966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T alglib::SLLStack&lt; T &gt;::Top</definition>
        <argsstring>() const</argsstring>
        <name>Top</name>
        <qualifiedname>alglib::SLLStack::Top</qualifiedname>
        <briefdescription>
<para>Returns value from the top of the stack without removing it. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>value on top of the stack.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="62" column="5" bodyfile="Include/sll_stack.h" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool alglib::SLLStack&lt; T &gt;::IsEmpty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsEmpty</name>
        <qualifiedname>alglib::SLLStack::IsEmpty</qualifiedname>
        <briefdescription>
<para>Checks if the stack is empty by checking if the top pointer is nullptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if empty, false if not.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="63" column="8" bodyfile="Include/sll_stack.h" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1a93f1413805738dc3d94092ab4efc8a1d" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t alglib::SLLStack&lt; T &gt;::Size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>Size</name>
        <qualifiedname>alglib::SLLStack::Size</qualifiedname>
        <briefdescription>
<para>Calculates size of the stack by traversing the list and counting the nodes. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>amount values on stack.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="64" column="10" bodyfile="Include/sll_stack.h" bodystart="155" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_stack_1a12999b6099d1d7939da4bd9e698bfcb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alglib::SLLStack&lt; T &gt;::~SLLStack</definition>
        <argsstring>()</argsstring>
        <name>~SLLStack</name>
        <qualifiedname>alglib::SLLStack::~SLLStack</qualifiedname>
        <briefdescription>
<para>Removes all nodes from the stack by traversing the list and deleting each. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_stack.h" line="67" column="3" bodyfile="Include/sll_stack.h" bodystart="169" bodyend="176"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classalglib_1_1_s_l_l_stack" kindref="compound">SLLStack</ref> is a stack implementation that uses a singly linked list as a base structure. It allocates memory on the heap, so the stack can grow dynamically. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type of data stored on the stack.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="Include/sll_stack.h" line="54" column="1" bodyfile="Include/sll_stack.h" bodystart="54" bodyend="84"/>
    <listofallmembers>
      <member refid="classalglib_1_1_s_l_l_stack_1a6ff1ce19b121db87a473a80df378a861" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>IsEmpty</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1a7af12c188430bee708b78c9c9d22a833" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>Pop</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1a2d42e7b987f895deae7738b2cf3b6399" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>Push</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1a93f1413805738dc3d94092ab4efc8a1d" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>Size</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1ae9c43c9d3e8dfca71d83428fc22f2893" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>SLLStack</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1a54548b10e2114a7c43329118d411f966" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>Top</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1a7723fbfe35e10019f5c313b756e868e6" prot="private" virt="non-virtual"><scope>alglib::SLLStack</scope><name>top</name></member>
      <member refid="classalglib_1_1_s_l_l_stack_1a12999b6099d1d7939da4bd9e698bfcb3" prot="public" virt="non-virtual"><scope>alglib::SLLStack</scope><name>~SLLStack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
