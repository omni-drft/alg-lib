.TH "alglib::ArrayStack< T, capacity >" 3 "Version 1.0.0" "AlgLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
alglib::ArrayStack< T, capacity > \- Template based stack implementation that uses an array as a base structure\&. It doesn't allocate memory on the heap, but it has a fixed capacity that has to be defined at compile time\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <array_stack\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBArrayStack\fP ()"
.br
.RI "\fBArrayStack\fP constructor\&. Only initializes the topIndex to -1\&. "
.ti -1c
.RI "void \fBPush\fP (T val)"
.br
.RI "Pushes a value to the top of the stack\&. Handles the topIndex and checks if the stack is full\&. "
.ti -1c
.RI "T \fBPop\fP ()"
.br
.RI "Pops the value from the top of the stack\&. "
.ti -1c
.RI "T \fBTop\fP () const"
.br
.RI "Method that gets the value from the top of the stack without removing it\&. "
.ti -1c
.RI "bool \fBIsEmpty\fP () const noexcept"
.br
.RI "Method that checks if the stack is empty\&. "
.ti -1c
.RI "bool \fBIsFull\fP () const noexcept"
.br
.RI "Method that checks if the stack is full\&. "
.ti -1c
.RI "size_t \fBSize\fP () const noexcept"
.br
.RI "Method that gets amount of elements in the stack\&. "
.ti -1c
.RI "size_t \fBCapacity\fP () const noexcept"
.br
.RI "Method that gets the maximum capacity of the stack\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T, size_t capacity>
.br
class alglib::ArrayStack< T, capacity >"Template based stack implementation that uses an array as a base structure\&. It doesn't allocate memory on the heap, but it has a fixed capacity that has to be defined at compile time\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP type of data stored in stack
.br
\fIcapacity\fP max capacity of stack (size of array)
.RE
.PP

.PP
Definition at line \fB57\fP of file \fBarray_stack\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T, size_t capacity> \fBalglib::ArrayStack\fP< T, capacity >::ArrayStack ()"

.PP
\fBArrayStack\fP constructor\&. Only initializes the topIndex to -1\&. 
.PP
Definition at line \fB87\fP of file \fBarray_stack\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T, size_t capacity> size_t \fBalglib::ArrayStack\fP< T, capacity >::Capacity () const\fR [noexcept]\fP"

.PP
Method that gets the maximum capacity of the stack\&. 
.PP
\fBReturns\fP
.RS 4
maximum capacity of the stack\&.
.RE
.PP

.PP
Definition at line \fB159\fP of file \fBarray_stack\&.h\fP\&.
.SS "template<typename T, size_t capacity> bool \fBalglib::ArrayStack\fP< T, capacity >::IsEmpty () const\fR [noexcept]\fP"

.PP
Method that checks if the stack is empty\&. 
.PP
\fBReturns\fP
.RS 4
true if empty, false if not
.RE
.PP

.PP
Definition at line \fB132\fP of file \fBarray_stack\&.h\fP\&.
.SS "template<typename T, size_t capacity> bool \fBalglib::ArrayStack\fP< T, capacity >::IsFull () const\fR [noexcept]\fP"

.PP
Method that checks if the stack is full\&. 
.PP
\fBReturns\fP
.RS 4
true if stack is full, false if not\&.
.RE
.PP

.PP
Definition at line \fB141\fP of file \fBarray_stack\&.h\fP\&.
.SS "template<typename T, size_t capacity> T \fBalglib::ArrayStack\fP< T, capacity >::Pop ()"

.PP
Pops the value from the top of the stack\&. 
.PP
\fBReturns\fP
.RS 4
value that was on the top of the stack\&.
.RE
.PP

.PP
Definition at line \fB108\fP of file \fBarray_stack\&.h\fP\&.
.SS "template<typename T, size_t capacity> void \fBalglib::ArrayStack\fP< T, capacity >::Push (T val)"

.PP
Pushes a value to the top of the stack\&. Handles the topIndex and checks if the stack is full\&. 
.PP
\fBParameters\fP
.RS 4
\fIval\fP value to be pushed\&.
.RE
.PP

.PP
Definition at line \fB95\fP of file \fBarray_stack\&.h\fP\&.
.SS "template<typename T, size_t capacity> size_t \fBalglib::ArrayStack\fP< T, capacity >::Size () const\fR [noexcept]\fP"

.PP
Method that gets amount of elements in the stack\&. 
.PP
\fBReturns\fP
.RS 4
number of items in the stack\&.
.RE
.PP

.PP
Definition at line \fB150\fP of file \fBarray_stack\&.h\fP\&.
.SS "template<typename T, size_t capacity> T \fBalglib::ArrayStack\fP< T, capacity >::Top () const"

.PP
Method that gets the value from the top of the stack without removing it\&. 
.PP
\fBReturns\fP
.RS 4
vale that is on the top of the stack\&.
.RE
.PP

.PP
Definition at line \fB120\fP of file \fBarray_stack\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AlgLib from the source code\&.
