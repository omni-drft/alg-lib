.TH "alglib::Vector< T >" 3 "Version 1.0.0" "AlgLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
alglib::Vector< T > \- Template based vector implementation that uses an array as a base structure\&. It allocates memory on the heap, and it can grow dynamically\&. Capacity doubles every time the size exceeds current capacity\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <vector\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVector\fP () noexcept"
.br
.RI "No argument constructor for the vector class\&. It initializes the vector with default values\&. It allocates memory for 4 elements\&. "
.ti -1c
.RI "\fBVector\fP (size_t elements) noexcept"
.br
.RI "Constructor that initializes the vector with a given number of elements\&. "
.ti -1c
.RI "\fBVector\fP (size_t elements, const T &value) noexcept"
.br
.RI "Constructor that initializes the vector to a given number of elements with a given value\&. All elements will be set to the given value\&. "
.ti -1c
.RI "void \fBPush\fP (const T &value) noexcept"
.br
.RI "Adds a new element to the end of the vector\&. If the size exceeds the capacity, the capacity is doubled\&. "
.ti -1c
.RI "void \fBInsert\fP (const T &value, size_t index)"
.br
.RI "Inserts a new element at a given index\&. If the index is out of range, an exception is thrown\&. If the size exceeds the capacity, the capacity is doubled just like in the Push method\&. "
.ti -1c
.RI "T & \fBPop\fP ()"
.br
.RI "Returns the last element of the vector and removes it from the vector by decrementing the size\&. "
.ti -1c
.RI "T & \fBAt\fP (size_t index)"
.br
.RI "Returns the element at a given index\&. If the index is out of range, an exception is thrown\&. "
.ti -1c
.RI "const T & \fBAt\fP (size_t index) const"
.br
.RI "Returns the element at a given index\&. If the index is out of range, an exception is thrown\&. "
.ti -1c
.RI "size_t \fBSize\fP () const noexcept"
.br
.RI "Return amount of elements in the vector\&. "
.ti -1c
.RI "size_t \fBCapacity\fP () const noexcept"
.br
.RI "Returns current maximum capacity of the vector\&. "
.ti -1c
.RI "void \fBResize\fP (size_t size)"
.br
.RI "Modifies the size of the vector\&. If the new size is smaller than the current size, the vector is truncated\&. If the new size is larger than the current size, the vector is extended\&. "
.ti -1c
.RI "void \fBShrinkToFit\fP ()"
.br
.RI "Shrinks the capacity of the vector to the current size by reallocating memory with the size of the vector\&. "
.ti -1c
.RI "T & \fBFront\fP ()"
.br
.RI "Returns the first element of the vector\&. "
.ti -1c
.RI "const T & \fBFront\fP () const"
.br
.RI "Returns the first element of the vector\&. "
.ti -1c
.RI "T & \fBBack\fP ()"
.br
.RI "Returns the last element of the vector\&. "
.ti -1c
.RI "const T & \fBBack\fP () const"
.br
.RI "Returns the last element of the vector\&. "
.ti -1c
.RI "\fB~Vector\fP () noexcept"
.br
.RI "Deletes the vector and deallocates memory\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>
.br
class alglib::Vector< T >"Template based vector implementation that uses an array as a base structure\&. It allocates memory on the heap, and it can grow dynamically\&. Capacity doubles every time the size exceeds current capacity\&. 


.PP
\fBTemplate Parameters\fP
.RS 4
\fIT\fP type of data stored in vector\&.
.RE
.PP

.PP
Definition at line \fB52\fP of file \fBvector\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T> \fBalglib::Vector\fP< T >::Vector ()\fR [noexcept]\fP"

.PP
No argument constructor for the vector class\&. It initializes the vector with default values\&. It allocates memory for 4 elements\&. 
.PP
Definition at line \fB109\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> \fBalglib::Vector\fP< T >::Vector (size_t elements)\fR [noexcept]\fP"

.PP
Constructor that initializes the vector with a given number of elements\&. 
.PP
\fBParameters\fP
.RS 4
\fIelements\fP amount of elements that will be initially allocated\&.
.RE
.PP

.PP
Definition at line \fB119\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> \fBalglib::Vector\fP< T >::Vector (size_t elements, const T & value)\fR [noexcept]\fP"

.PP
Constructor that initializes the vector to a given number of elements with a given value\&. All elements will be set to the given value\&. 
.PP
\fBParameters\fP
.RS 4
\fIelements\fP amount of elements that will be initially allocated\&. 
.br
\fIvalue\fP value that all the elements will be initialised to\&.
.RE
.PP

.PP
Definition at line \fB133\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> \fBalglib::Vector\fP< T >::~\fBVector\fP ()\fR [noexcept]\fP"

.PP
Deletes the vector and deallocates memory\&. 
.PP
Definition at line \fB292\fP of file \fBvector\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename T> T & \fBalglib::Vector\fP< T >::At (size_t index)"

.PP
Returns the element at a given index\&. If the index is out of range, an exception is thrown\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP index of element to return\&.
.RE
.PP
\fBReturns\fP
.RS 4
element at a given index\&.
.RE
.PP

.PP
Definition at line \fB193\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> const T & \fBalglib::Vector\fP< T >::At (size_t index) const"

.PP
Returns the element at a given index\&. If the index is out of range, an exception is thrown\&. 
.PP
\fBParameters\fP
.RS 4
\fIindex\fP index of element to return\&.
.RE
.PP
\fBReturns\fP
.RS 4
element at a given index\&.
.RE
.PP

.PP
Definition at line \fB207\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> T & \fBalglib::Vector\fP< T >::Back ()"

.PP
Returns the last element of the vector\&. 
.PP
\fBReturns\fP
.RS 4
last element of the vector\&.
.RE
.PP

.PP
Definition at line \fB275\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> const T & \fBalglib::Vector\fP< T >::Back () const"

.PP
Returns the last element of the vector\&. 
.PP
\fBReturns\fP
.RS 4
last element of the vector\&.
.RE
.PP

.PP
Definition at line \fB284\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> size_t \fBalglib::Vector\fP< T >::Capacity () const\fR [noexcept]\fP"

.PP
Returns current maximum capacity of the vector\&. 
.PP
\fBReturns\fP
.RS 4
current maximum capacity of the vector\&.
.RE
.PP

.PP
Definition at line \fB228\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> T & \fBalglib::Vector\fP< T >::Front ()"

.PP
Returns the first element of the vector\&. 
.PP
\fBReturns\fP
.RS 4
first element of the vector\&.
.RE
.PP

.PP
Definition at line \fB257\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> const T & \fBalglib::Vector\fP< T >::Front () const"

.PP
Returns the first element of the vector\&. 
.PP
\fBReturns\fP
.RS 4
first element of the vector\&.
.RE
.PP

.PP
Definition at line \fB266\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> void \fBalglib::Vector\fP< T >::Insert (const T & value, size_t index)"

.PP
Inserts a new element at a given index\&. If the index is out of range, an exception is thrown\&. If the size exceeds the capacity, the capacity is doubled just like in the Push method\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP value to be inserted\&.
.br
\fIindex\fP inserting position\&.
.RE
.PP

.PP
Definition at line \fB162\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> T & \fBalglib::Vector\fP< T >::Pop ()"

.PP
Returns the last element of the vector and removes it from the vector by decrementing the size\&. 
.PP
\fBReturns\fP
.RS 4
last element of the vector\&.
.RE
.PP

.PP
Definition at line \fB182\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> void \fBalglib::Vector\fP< T >::Push (const T & value)\fR [noexcept]\fP"

.PP
Adds a new element to the end of the vector\&. If the size exceeds the capacity, the capacity is doubled\&. 
.PP
\fBParameters\fP
.RS 4
\fIvalue\fP value to be added\&.
.RE
.PP

.PP
Definition at line \fB147\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> void \fBalglib::Vector\fP< T >::Resize (size_t size)"

.PP
Modifies the size of the vector\&. If the new size is smaller than the current size, the vector is truncated\&. If the new size is larger than the current size, the vector is extended\&. 
.PP
\fBParameters\fP
.RS 4
\fIsize\fP new size\&.
.RE
.PP

.PP
Definition at line \fB239\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> void \fBalglib::Vector\fP< T >::ShrinkToFit ()"

.PP
Shrinks the capacity of the vector to the current size by reallocating memory with the size of the vector\&. 
.PP
Definition at line \fB248\fP of file \fBvector\&.h\fP\&.
.SS "template<typename T> size_t \fBalglib::Vector\fP< T >::Size () const\fR [noexcept]\fP"

.PP
Return amount of elements in the vector\&. 
.PP
\fBReturns\fP
.RS 4
amount of elements in the vector\&.
.RE
.PP

.PP
Definition at line \fB219\fP of file \fBvector\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AlgLib from the source code\&.
