<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classalglib_1_1_vector" xml:lang="en-US">
<title>alglib::Vector&lt; T &gt; Class Template Reference</title>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary></indexterm>
<para>

<para>Template based vector implementation that uses an array as a base structure. It allocates memory on the heap, and it can grow dynamically. Capacity doubles every time the size exceeds current capacity. </para>
 
</para>
<para>
<computeroutput>#include &lt;vector.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35">Vector</link> () noexcept</para>

<para>No argument constructor for the vector class. It initializes the vector with default values. It allocates memory for 4 elements. </para>
</listitem>
            <listitem><para><link linkend="_classalglib_1_1_vector_1a08e67aca5cd89db29b6ac3d5e526d9d7">Vector</link> (size_t elements) noexcept</para>

<para>Constructor that initializes the vector with a given number of elements. </para>
</listitem>
            <listitem><para><link linkend="_classalglib_1_1_vector_1a86cec3bbb884e34220eca1e0091046bf">Vector</link> (size_t elements, const T &amp;value) noexcept</para>

<para>Constructor that initializes the vector to a given number of elements with a given value. All elements will be set to the given value. </para>
</listitem>
            <listitem><para>void <link linkend="_classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab">Push</link> (const T &amp;value) noexcept</para>

<para>Adds a new element to the end of the vector. If the size exceeds the capacity, the capacity is doubled. </para>
</listitem>
            <listitem><para>void <link linkend="_classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d">Insert</link> (const T &amp;value, size_t index)</para>

<para>Inserts a new element at a given index. If the index is out of range, an exception is thrown. If the size exceeds the capacity, the capacity is doubled just like in the Push method. </para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814">Pop</link> ()</para>

<para>Returns the last element of the vector and removes it from the vector by decrementing the size. </para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0">At</link> (size_t index)</para>

<para>Returns the element at a given index. If the index is out of range, an exception is thrown. </para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classalglib_1_1_vector_1a87e3eb027a77353a466a0b5821dd9c13">At</link> (size_t index) const</para>

<para>Returns the element at a given index. If the index is out of range, an exception is thrown. </para>
</listitem>
            <listitem><para>size_t <link linkend="_classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950">Size</link> () const noexcept</para>

<para>Return amount of elements in the vector. </para>
</listitem>
            <listitem><para>size_t <link linkend="_classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab">Capacity</link> () const noexcept</para>

<para>Returns current maximum capacity of the vector. </para>
</listitem>
            <listitem><para>void <link linkend="_classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c">Resize</link> (size_t size)</para>

<para>Modifies the size of the vector. If the new size is smaller than the current size, the vector is truncated. If the new size is larger than the current size, the vector is extended. </para>
</listitem>
            <listitem><para>void <link linkend="_classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38">ShrinkToFit</link> ()</para>

<para>Shrinks the capacity of the vector to the current size by reallocating memory with the size of the vector. </para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd">Front</link> ()</para>

<para>Returns the first element of the vector. </para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classalglib_1_1_vector_1a41f322b7e4d3b5431b461590020a2cb3">Front</link> () const</para>

<para>Returns the first element of the vector. </para>
</listitem>
            <listitem><para>T &amp; <link linkend="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68">Back</link> ()</para>

<para>Returns the last element of the vector. </para>
</listitem>
            <listitem><para>const T &amp; <link linkend="_classalglib_1_1_vector_1a94a50e79ab5cbfc2525a2dca2dca46e7">Back</link> () const</para>

<para>Returns the last element of the vector. </para>
</listitem>
            <listitem><para><link linkend="_classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549">~Vector</link> () noexcept</para>

<para>Deletes the vector and deallocates memory. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<simplesect><title>template&lt;typename T&gt;<?linebreak?>class alglib::Vector&lt; T &gt;</title></simplesect>

<para>Template based vector implementation that uses an array as a base structure. It allocates memory on the heap, and it can grow dynamically. Capacity doubles every time the size exceeds current capacity. </para>



<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>T</entry><entry>
<para>type of data stored in vector.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00052">52</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classalglib_1_1_vector_1a2857cea89ebfcfdab1e6126e9038df35"/><section>
    <title>Vector()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Vector ( )<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>No argument constructor for the vector class. It initializes the vector with default values. It allocates memory for 4 elements. </para>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00109">109</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a08e67aca5cd89db29b6ac3d5e526d9d7"/><section>
    <title>Vector()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Vector (size_t elements)<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructor that initializes the vector with a given number of elements. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>elements</entry><entry>
<para>amount of elements that will be initially allocated.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00119">119</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a86cec3bbb884e34220eca1e0091046bf"/><section>
    <title>Vector()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Vector</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Vector</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Vector (size_t elements, const T &amp; value)<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructor that initializes the vector to a given number of elements with a given value. All elements will be set to the given value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>elements</entry><entry>
<para>amount of elements that will be initially allocated. </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>value that all the elements will be initialised to.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00133">133</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a9eb41e99c19da679c45e4cdf5c723549"/><section>
    <title>~Vector()</title>
<indexterm><primary>~Vector</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>~Vector</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput><link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::~<link linkend="_classalglib_1_1_vector">Vector</link> ( )<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Deletes the vector and deallocates memory. </para>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00292">292</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classalglib_1_1_vector_1aaaa9bcdc8ec765d7bb0f03a5eabfe7f0"/><section>
    <title>At()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>At</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>At</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::At (size_t index)</computeroutput></para><para>

<para>Returns the element at a given index. If the index is out of range, an exception is thrown. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>index</entry><entry>
<para>index of element to return.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>element at a given index.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00193">193</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a87e3eb027a77353a466a0b5821dd9c13"/><section>
    <title>At()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>At</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>At</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::At (size_t index) const</computeroutput></para><para>

<para>Returns the element at a given index. If the index is out of range, an exception is thrown. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>index</entry><entry>
<para>index of element to return.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>element at a given index.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00207">207</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a545d13c1d8234834f9aa8961faa67d68"/><section>
    <title>Back()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Back</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Back</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Back ( )</computeroutput></para><para>

<para>Returns the last element of the vector. </para>
</para>

<para><formalpara><title>Returns</title>

<para>last element of the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00275">275</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a94a50e79ab5cbfc2525a2dca2dca46e7"/><section>
    <title>Back()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Back</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Back</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Back ( ) const</computeroutput></para><para>

<para>Returns the last element of the vector. </para>
</para>

<para><formalpara><title>Returns</title>

<para>last element of the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00284">284</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a63771d92b6fcaba1e2d1742a19a57fab"/><section>
    <title>Capacity()</title>
<indexterm><primary>Capacity</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Capacity</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>size_t <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Capacity ( ) const<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Returns current maximum capacity of the vector. </para>
</para>

<para><formalpara><title>Returns</title>

<para>current maximum capacity of the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00228">228</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a4fbb185954148e6e825d713e7a5662bd"/><section>
    <title>Front()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>Front</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Front</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Front ( )</computeroutput></para><para>

<para>Returns the first element of the vector. </para>
</para>

<para><formalpara><title>Returns</title>

<para>first element of the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00257">257</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a41f322b7e4d3b5431b461590020a2cb3"/><section>
    <title>Front()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>Front</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Front</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>const T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Front ( ) const</computeroutput></para><para>

<para>Returns the first element of the vector. </para>
</para>

<para><formalpara><title>Returns</title>

<para>first element of the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00266">266</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a1126576feed3e3049d61eba5d416299d"/><section>
    <title>Insert()</title>
<indexterm><primary>Insert</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Insert</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>void <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Insert (const T &amp; value, size_t index)</computeroutput></para><para>

<para>Inserts a new element at a given index. If the index is out of range, an exception is thrown. If the size exceeds the capacity, the capacity is doubled just like in the Push method. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>value to be inserted.</para>
</entry>
                            </row>
                            <row>
<entry>index</entry><entry>
<para>inserting position.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00162">162</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1ab55d72118197d786aa367aae388b8814"/><section>
    <title>Pop()</title>
<indexterm><primary>Pop</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Pop</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>T &amp; <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Pop ( )</computeroutput></para><para>

<para>Returns the last element of the vector and removes it from the vector by decrementing the size. </para>
</para>

<para><formalpara><title>Returns</title>

<para>last element of the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00182">182</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1af5571157cbc81cac35762a483ff654ab"/><section>
    <title>Push()</title>
<indexterm><primary>Push</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Push</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>void <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Push (const T &amp; value)<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Adds a new element to the end of the vector. If the size exceeds the capacity, the capacity is doubled. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>value to be added.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00147">147</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1af44179e6db50f5654a83d4288b301f3c"/><section>
    <title>Resize()</title>
<indexterm><primary>Resize</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Resize</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>void <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Resize (size_t size)</computeroutput></para><para>

<para>Modifies the size of the vector. If the new size is smaller than the current size, the vector is truncated. If the new size is larger than the current size, the vector is extended. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>size</entry><entry>
<para>new size.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00239">239</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1a0d1f662b4f324872b1225764f4980d38"/><section>
    <title>ShrinkToFit()</title>
<indexterm><primary>ShrinkToFit</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>ShrinkToFit</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>void <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::ShrinkToFit ( )</computeroutput></para><para>

<para>Shrinks the capacity of the vector to the current size by reallocating memory with the size of the vector. </para>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00248">248</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<anchor xml:id="_classalglib_1_1_vector_1af5c5393e06edc7a1d6b6ed5b76cf3950"/><section>
    <title>Size()</title>
<indexterm><primary>Size</primary><secondary>alglib::Vector&lt; T &gt;</secondary></indexterm>
<indexterm><primary>alglib::Vector&lt; T &gt;</primary><secondary>Size</secondary></indexterm>
<computeroutput>template&lt;typename T&gt; </computeroutput><para><computeroutput>size_t <link linkend="_classalglib_1_1_vector">alglib::Vector</link>&lt; T &gt;::Size ( ) const<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Return amount of elements in the vector. </para>
</para>

<para><formalpara><title>Returns</title>

<para>amount of elements in the vector.</para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_vector_8h_source_1l00219">219</link> of file <link linkend="_vector_8h_source">vector.h</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
Include/<link linkend="_vector_8h">vector.h</link></section>
</section>
