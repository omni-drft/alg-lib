<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_doubly__linked__list_8h_source" xml:lang="en-US">
<title>doubly_linked_list.h</title>
<indexterm><primary>Include/doubly_linked_list.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_doubly__linked__list_8h_source_1l00001"/>00001 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00002"/>00002 <emphasis role="comment">//&#32;The&#32;MIT&#32;License&#32;(MIT)</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00004"/>00004 <emphasis role="comment">//&#32;Copyright&#32;©&#32;2024&#32;Piotr&#32;Walczak</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00005"/>00005 <emphasis role="comment">//</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00006"/>00006 <emphasis role="comment">//&#32;Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00007"/>00007 <emphasis role="comment">//&#32;of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;“Software”),&#32;to</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00008"/>00008 <emphasis role="comment">//&#32;deal&#32;in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00009"/>00009 <emphasis role="comment">//&#32;rights&#32;to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00010"/>00010 <emphasis role="comment">//&#32;sell&#32;copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00011"/>00011 <emphasis role="comment">//&#32;furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00012"/>00012 <emphasis role="comment">//</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00013"/>00013 <emphasis role="comment">//&#32;The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00014"/>00014 <emphasis role="comment">//&#32;all&#32;copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00015"/>00015 <emphasis role="comment">//</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00016"/>00016 <emphasis role="comment">//&#32;THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;“AS&#32;IS”,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00017"/>00017 <emphasis role="comment">//&#32;IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00018"/>00018 <emphasis role="comment">//&#32;FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00019"/>00019 <emphasis role="comment">//&#32;THE&#32;AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00020"/>00020 <emphasis role="comment">//&#32;LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00021"/>00021 <emphasis role="comment">//&#32;FROM,&#32;OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00022"/>00022 <emphasis role="comment">//&#32;IN&#32;THE&#32;SOFTWARE.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00023"/>00023 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00024"/>00024 
<anchor xml:id="_doubly__linked__list_8h_source_1l00025"/>00025 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00026"/>00026 <emphasis role="comment">//&#32;File:&#32;doubly_linked_list.h</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00027"/>00027 <emphasis role="comment">//</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00028"/>00028 <emphasis role="comment">//&#32;This&#32;file&#32;contains&#32;the&#32;implementation&#32;of&#32;a&#32;Doubly&#32;Linked&#32;List.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00029"/>00029 <emphasis role="comment">//&#32;The&#32;Doubly&#32;Linked&#32;List&#32;is&#32;a&#32;data&#32;structure&#32;that&#32;consists&#32;of&#32;a&#32;sequence&#32;of</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00030"/>00030 <emphasis role="comment">//&#32;elements,&#32;each&#32;containing&#32;a&#32;link&#32;to&#32;its&#32;previous&#32;element&#32;and&#32;a&#32;link&#32;to&#32;its</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00031"/>00031 <emphasis role="comment">//&#32;next&#32;element.&#32;The&#32;Doubly&#32;Linked&#32;List&#32;allows&#32;for&#32;efficient&#32;insertion&#32;and</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00032"/>00032 <emphasis role="comment">//&#32;deletion&#32;of&#32;elements&#32;at&#32;the&#32;beginning,&#32;end,&#32;and&#32;at&#32;any&#32;position&#32;in&#32;the&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00033"/>00033 <emphasis role="comment">//&#32;The&#32;Doubly&#32;Linked&#32;List&#32;also&#32;allows&#32;for&#32;efficient&#32;traversal&#32;of&#32;the&#32;list&#32;and</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00034"/>00034 <emphasis role="comment">//&#32;searching&#32;for&#32;elements&#32;in&#32;the&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00035"/>00035 <emphasis role="comment">//*****************************************************************************</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00036"/>00036 
<anchor xml:id="_doubly__linked__list_8h_source_1l00037"/>00037 <emphasis role="preprocessor">#ifndef&#32;ALGLIB_INCLUDE_DOUBLYLINKEDLIST_H_</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00038"/>00038 <emphasis role="preprocessor">#define&#32;ALGLIB_INCLUDE_DOUBLYLINKEDLIST_H_</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00039"/>00039 
<anchor xml:id="_doubly__linked__list_8h_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&lt;cstdlib&gt;</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&lt;functional&gt;</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00042"/>00042 
<anchor xml:id="_doubly__linked__list_8h_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_constants_8h">constants.h</link>&quot;</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00044"/>00044 
<anchor xml:id="_doubly__linked__list_8h_source_1l00048"/>00048 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacealglib">alglib</link>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00049"/>00049 
<anchor xml:id="_doubly__linked__list_8h_source_1l00054"/>00054 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00055"/><link linkend="_classalglib_1_1_doubly_linked_list">00055</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classalglib_1_1_doubly_linked_list_1a6c98be24373caab3196ef758b5c2d33b">DoublyLinkedList</link>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00056"/>00056 &#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_doubly__linked__list_8h_source_1l00057"/>00057 &#32;&#32;<emphasis role="comment">//&#32;Constructor&#32;for&#32;the&#32;doubly&#32;linked&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00058"/>00058 &#32;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a6c98be24373caab3196ef758b5c2d33b">DoublyLinkedList</link>();
<anchor xml:id="_doubly__linked__list_8h_source_1l00059"/>00059 
<anchor xml:id="_doubly__linked__list_8h_source_1l00060"/>00060 &#32;&#32;<emphasis role="comment">//&#32;Methods&#32;for&#32;exploring&#32;the&#32;doubly&#32;linked&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00061"/>00061 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a29cbef42fe6e7a0015a1293741ddb0d4">Traverse</link>(<emphasis role="keyword">const</emphasis>&#32;std::function&lt;<emphasis role="keywordtype">void</emphasis>(T)&gt;&#32;&amp;visit_callback)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00062"/>00062 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1ad461a49e8f7985adc7160c7b0a4d3170">Size</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00063"/>00063 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a18ecbc2bd367a5adf94f8bdb45aba644">Find</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;value)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00064"/>00064 
<anchor xml:id="_doubly__linked__list_8h_source_1l00065"/>00065 &#32;&#32;<emphasis role="comment">//&#32;Method&#32;for&#32;converting&#32;the&#32;doubly&#32;linked&#32;list&#32;to&#32;a&#32;vector.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00066"/>00066 &#32;&#32;std::vector&lt;T&gt;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a7a7147cf1a61a9785642ce0d9db96c8d">GetAsVector</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00067"/>00067 
<anchor xml:id="_doubly__linked__list_8h_source_1l00068"/>00068 &#32;&#32;<emphasis role="comment">//&#32;Methods&#32;for&#32;inserting&#32;elements&#32;into&#32;the&#32;doubly&#32;linked&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00069"/>00069 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1ae5c4984f3b543255d77bc7dff712dae2">InsertAtBeginning</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;data)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00070"/>00070 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a618478f1d0ddb6983e6a5328393aaa40">InsertAtEnd</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;data)&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00071"/>00071 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a13a231a242c15a554be2b8036da309d8">InsertAtPosition</link>(<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;pos,&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00072"/>00072 
<anchor xml:id="_doubly__linked__list_8h_source_1l00073"/>00073 &#32;&#32;<emphasis role="comment">//&#32;Methods&#32;for&#32;deleting&#32;elements&#32;from&#32;the&#32;doubly&#32;linked&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00074"/>00074 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a09d0d63d671d25354f023b526318f834">DeleteAtBeginning</link>();
<anchor xml:id="_doubly__linked__list_8h_source_1l00075"/>00075 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a36a6aa7de2d8d22e917b2a2587f5d132">DeleteAtEnd</link>();
<anchor xml:id="_doubly__linked__list_8h_source_1l00076"/>00076 &#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a334fc7e2ca9a862d8978b0a3150276bd">DeleteAtPosition</link>(uint32_t&#32;pos);
<anchor xml:id="_doubly__linked__list_8h_source_1l00077"/>00077 
<anchor xml:id="_doubly__linked__list_8h_source_1l00078"/>00078 &#32;&#32;<emphasis role="comment">//&#32;Method&#32;for&#32;checking&#32;if&#32;the&#32;doubly&#32;linked&#32;list&#32;is&#32;empty.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00079"/>00079 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">IsEmpty</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00080"/>00080 
<anchor xml:id="_doubly__linked__list_8h_source_1l00081"/>00081 &#32;&#32;<emphasis role="comment">//&#32;Destructor&#32;for&#32;the&#32;doubly&#32;linked&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00082"/>00082 &#32;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a3793fbc2a10abfb97647386dae394770">~DoublyLinkedList</link>();
<anchor xml:id="_doubly__linked__list_8h_source_1l00083"/>00083 
<anchor xml:id="_doubly__linked__list_8h_source_1l00084"/>00084 &#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="_doubly__linked__list_8h_source_1l00090"/>00090 &#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>Node&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00091"/>00091 &#32;&#32;&#32;&#32;Node(T&#32;data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00092"/>00092 &#32;&#32;&#32;&#32;~Node()&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00093"/>00093 &#32;&#32;&#32;&#32;Node&#32;*next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00094"/>00094 &#32;&#32;&#32;&#32;Node&#32;*previous;
<anchor xml:id="_doubly__linked__list_8h_source_1l00095"/>00095 &#32;&#32;&#32;&#32;T&#32;data;
<anchor xml:id="_doubly__linked__list_8h_source_1l00096"/>00096 &#32;&#32;};
<anchor xml:id="_doubly__linked__list_8h_source_1l00097"/>00097 
<anchor xml:id="_doubly__linked__list_8h_source_1l00098"/>00098 &#32;&#32;<emphasis role="comment">//&#32;Head&#32;and&#32;tail&#32;pointers&#32;for&#32;the&#32;doubly&#32;linked&#32;list.</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00099"/>00099 &#32;&#32;Node&#32;*head_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00100"/>00100 &#32;&#32;Node&#32;*tail_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00101"/>00101 };
<anchor xml:id="_doubly__linked__list_8h_source_1l00102"/>00102 
<anchor xml:id="_doubly__linked__list_8h_source_1l00108"/>00108 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00109"/>00109 DoublyLinkedList&lt;T&gt;::Node::Node(<emphasis role="keyword">const</emphasis>&#32;T&#32;data)
<anchor xml:id="_doubly__linked__list_8h_source_1l00110"/>00110 &#32;&#32;&#32;&#32;:&#32;next(nullptr),&#32;previous(nullptr),&#32;data(data)&#32;{}
<anchor xml:id="_doubly__linked__list_8h_source_1l00111"/>00111 
<anchor xml:id="_doubly__linked__list_8h_source_1l00116"/>00116 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00117"/><link linkend="_classalglib_1_1_doubly_linked_list_1a6c98be24373caab3196ef758b5c2d33b">00117</link> <link linkend="_classalglib_1_1_doubly_linked_list_1a6c98be24373caab3196ef758b5c2d33b">DoublyLinkedList&lt;T&gt;::DoublyLinkedList</link>()&#32;:&#32;head_(nullptr),&#32;tail_(nullptr)&#32;{}
<anchor xml:id="_doubly__linked__list_8h_source_1l00118"/>00118 
<anchor xml:id="_doubly__linked__list_8h_source_1l00123"/>00123 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00124"/><link linkend="_classalglib_1_1_doubly_linked_list_1a29cbef42fe6e7a0015a1293741ddb0d4">00124</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a29cbef42fe6e7a0015a1293741ddb0d4">DoublyLinkedList&lt;T&gt;::Traverse</link>(
<anchor xml:id="_doubly__linked__list_8h_source_1l00125"/>00125 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::function&lt;<emphasis role="keywordtype">void</emphasis>(T)&gt;&#32;&amp;visit_callback)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00126"/>00126 &#32;&#32;Node&#32;*tmp{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00127"/>00127 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00128"/>00128 &#32;&#32;&#32;&#32;visit_callback(tmp-&gt;data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00129"/>00129 &#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00130"/>00130 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00131"/>00131 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00132"/>00132 
<anchor xml:id="_doubly__linked__list_8h_source_1l00139"/>00139 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00140"/><link linkend="_classalglib_1_1_doubly_linked_list_1ad461a49e8f7985adc7160c7b0a4d3170">00140</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1ad461a49e8f7985adc7160c7b0a4d3170">DoublyLinkedList&lt;T&gt;::Size</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00141"/>00141 &#32;&#32;Node&#32;*tmp{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00142"/>00142 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count{};
<anchor xml:id="_doubly__linked__list_8h_source_1l00143"/>00143 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00144"/>00144 &#32;&#32;&#32;&#32;++count;
<anchor xml:id="_doubly__linked__list_8h_source_1l00145"/>00145 &#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00146"/>00146 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00147"/>00147 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;count;
<anchor xml:id="_doubly__linked__list_8h_source_1l00148"/>00148 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00149"/>00149 
<anchor xml:id="_doubly__linked__list_8h_source_1l00156"/>00156 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00157"/><link linkend="_classalglib_1_1_doubly_linked_list_1a18ecbc2bd367a5adf94f8bdb45aba644">00157</link> <emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a18ecbc2bd367a5adf94f8bdb45aba644">DoublyLinkedList&lt;T&gt;::Find</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;value)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_doubly__linked__list_8h_source_1l00158"/>00158 &#32;&#32;Node&#32;*tmp{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00159"/>00159 &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;count{};
<anchor xml:id="_doubly__linked__list_8h_source_1l00160"/>00160 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp&#32;&amp;&amp;&#32;tmp-&gt;data&#32;!=&#32;value)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00161"/>00161 &#32;&#32;&#32;&#32;++count;
<anchor xml:id="_doubly__linked__list_8h_source_1l00162"/>00162 &#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00163"/>00163 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00164"/>00164 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00165"/>00165 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1a7f08c1055421a42acd3c96dac7dbb82f">errors::kItemNotFound</link>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00166"/>00166 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;count;
<anchor xml:id="_doubly__linked__list_8h_source_1l00168"/>00168 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00169"/>00169 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00170"/>00170 
<anchor xml:id="_doubly__linked__list_8h_source_1l00180"/>00180 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00181"/><link linkend="_classalglib_1_1_doubly_linked_list_1a7a7147cf1a61a9785642ce0d9db96c8d">00181</link> std::vector&lt;T&gt;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a7a7147cf1a61a9785642ce0d9db96c8d">DoublyLinkedList&lt;T&gt;::GetAsVector</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00182"/>00182 &#32;&#32;std::vector&lt;T&gt;&#32;vec{};
<anchor xml:id="_doubly__linked__list_8h_source_1l00183"/>00183 &#32;&#32;vec.reserve(<link linkend="_classalglib_1_1_doubly_linked_list_1ad461a49e8f7985adc7160c7b0a4d3170">Size</link>());
<anchor xml:id="_doubly__linked__list_8h_source_1l00184"/>00184 &#32;&#32;Node&#32;*tmp{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00185"/>00185 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00186"/>00186 &#32;&#32;&#32;&#32;vec.emplace_back(tmp-&gt;data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00187"/>00187 &#32;&#32;&#32;&#32;tmp&#32;=&#32;tmp-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00188"/>00188 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00189"/>00189 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;vec;
<anchor xml:id="_doubly__linked__list_8h_source_1l00190"/>00190 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00191"/>00191 
<anchor xml:id="_doubly__linked__list_8h_source_1l00199"/>00199 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00200"/><link linkend="_classalglib_1_1_doubly_linked_list_1ae5c4984f3b543255d77bc7dff712dae2">00200</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1ae5c4984f3b543255d77bc7dff712dae2">DoublyLinkedList&lt;T&gt;::InsertAtBeginning</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;data)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00201"/>00201 &#32;&#32;Node&#32;*new_node{<emphasis role="keyword">new</emphasis>&#32;Node(data)};
<anchor xml:id="_doubly__linked__list_8h_source_1l00202"/>00202 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">IsEmpty</link>())&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00203"/>00203 &#32;&#32;&#32;&#32;head_&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00204"/>00204 &#32;&#32;&#32;&#32;tail_&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00205"/>00205 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00206"/>00206 &#32;&#32;&#32;&#32;new_node-&gt;next&#32;=&#32;head_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00207"/>00207 &#32;&#32;&#32;&#32;head_-&gt;previous&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00208"/>00208 &#32;&#32;&#32;&#32;head_&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00209"/>00209 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00210"/>00210 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00211"/>00211 
<anchor xml:id="_doubly__linked__list_8h_source_1l00219"/>00219 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00220"/><link linkend="_classalglib_1_1_doubly_linked_list_1a618478f1d0ddb6983e6a5328393aaa40">00220</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a618478f1d0ddb6983e6a5328393aaa40">DoublyLinkedList&lt;T&gt;::InsertAtEnd</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;data)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00221"/>00221 &#32;&#32;Node&#32;*new_node{<emphasis role="keyword">new</emphasis>&#32;Node(data)};
<anchor xml:id="_doubly__linked__list_8h_source_1l00222"/>00222 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">IsEmpty</link>())&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00223"/>00223 &#32;&#32;&#32;&#32;head_&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00224"/>00224 &#32;&#32;&#32;&#32;tail_&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00225"/>00225 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00226"/>00226 &#32;&#32;&#32;&#32;tail_-&gt;next&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00227"/>00227 &#32;&#32;&#32;&#32;new_node-&gt;previous&#32;=&#32;tail_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00228"/>00228 &#32;&#32;&#32;&#32;tail_&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00229"/>00229 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00230"/>00230 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00231"/>00231 
<anchor xml:id="_doubly__linked__list_8h_source_1l00240"/>00240 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00241"/><link linkend="_classalglib_1_1_doubly_linked_list_1a13a231a242c15a554be2b8036da309d8">00241</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a13a231a242c15a554be2b8036da309d8">DoublyLinkedList&lt;T&gt;::InsertAtPosition</link>(<emphasis role="keyword">const</emphasis>&#32;uint32_t&#32;pos,&#32;<emphasis role="keyword">const</emphasis>&#32;T&#32;data)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00242"/>00242 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;current_size{<link linkend="_classalglib_1_1_doubly_linked_list_1ad461a49e8f7985adc7160c7b0a4d3170">Size</link>()};
<anchor xml:id="_doubly__linked__list_8h_source_1l00243"/>00243 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;&gt;&#32;current_size)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00244"/>00244 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1afcfcd5dc808b27df606d5761cb149bb9">errors::kIndexOutOfRange</link>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00245"/>00245 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00246"/>00246 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;==&#32;0)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00247"/>00247 &#32;&#32;&#32;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1ae5c4984f3b543255d77bc7dff712dae2">InsertAtBeginning</link>(data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00248"/>00248 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00249"/>00249 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00250"/>00250 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;==&#32;current_size)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a618478f1d0ddb6983e6a5328393aaa40">InsertAtEnd</link>(data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00253"/>00253 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00254"/>00254 &#32;&#32;Node&#32;*new_node&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;Node(data);
<anchor xml:id="_doubly__linked__list_8h_source_1l00255"/>00255 &#32;&#32;Node&#32;*prev_node&#32;=&#32;head_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00256"/>00256 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint32_t&#32;i{};&#32;i&#32;&lt;&#32;pos&#32;-&#32;1;&#32;++i)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00257"/>00257 &#32;&#32;&#32;&#32;prev_node&#32;=&#32;prev_node-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00258"/>00258 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00259"/>00259 &#32;&#32;Node&#32;*next_node{prev_node-&gt;next};
<anchor xml:id="_doubly__linked__list_8h_source_1l00260"/>00260 &#32;&#32;new_node-&gt;next&#32;=&#32;next_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00261"/>00261 &#32;&#32;new_node-&gt;previous&#32;=&#32;prev_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00262"/>00262 &#32;&#32;prev_node-&gt;next&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00263"/>00263 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(next_node)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00264"/>00264 &#32;&#32;&#32;&#32;next_node-&gt;previous&#32;=&#32;new_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00265"/>00265 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00266"/>00266 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00267"/>00267 
<anchor xml:id="_doubly__linked__list_8h_source_1l00273"/>00273 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00274"/><link linkend="_classalglib_1_1_doubly_linked_list_1a09d0d63d671d25354f023b526318f834">00274</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a09d0d63d671d25354f023b526318f834">DoublyLinkedList&lt;T&gt;::DeleteAtBeginning</link>()&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00275"/>00275 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">IsEmpty</link>())&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00276"/>00276 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1a702e2c90c47734fc2bb07d6b773968a9">errors::kEmptyDeletion</link>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00277"/>00277 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00278"/>00278 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(head_&#32;==&#32;tail_)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00279"/>00279 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;head_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00280"/>00280 &#32;&#32;&#32;&#32;head_&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00281"/>00281 &#32;&#32;&#32;&#32;tail_&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00282"/>00282 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00283"/>00283 &#32;&#32;&#32;&#32;Node&#32;*tmp{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00284"/>00284 &#32;&#32;&#32;&#32;head_&#32;=&#32;head_-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00285"/>00285 &#32;&#32;&#32;&#32;head_-&gt;previous&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00286"/>00286 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;tmp;
<anchor xml:id="_doubly__linked__list_8h_source_1l00287"/>00287 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00288"/>00288 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00289"/>00289 
<anchor xml:id="_doubly__linked__list_8h_source_1l00295"/>00295 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00296"/><link linkend="_classalglib_1_1_doubly_linked_list_1a36a6aa7de2d8d22e917b2a2587f5d132">00296</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a36a6aa7de2d8d22e917b2a2587f5d132">DoublyLinkedList&lt;T&gt;::DeleteAtEnd</link>()&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00297"/>00297 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">IsEmpty</link>())&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1a702e2c90c47734fc2bb07d6b773968a9">errors::kEmptyDeletion</link>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00299"/>00299 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00300"/>00300 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(head_&#32;==&#32;tail_)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00301"/>00301 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;head_;
<anchor xml:id="_doubly__linked__list_8h_source_1l00302"/>00302 &#32;&#32;&#32;&#32;head_&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00303"/>00303 &#32;&#32;&#32;&#32;tail_&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00304"/>00304 &#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00305"/>00305 &#32;&#32;&#32;&#32;Node&#32;*tmp{tail_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00306"/>00306 &#32;&#32;&#32;&#32;tail_&#32;=&#32;tail_-&gt;previous;
<anchor xml:id="_doubly__linked__list_8h_source_1l00307"/>00307 &#32;&#32;&#32;&#32;tail_-&gt;next&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00308"/>00308 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;tmp;
<anchor xml:id="_doubly__linked__list_8h_source_1l00309"/>00309 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00310"/>00310 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00311"/>00311 
<anchor xml:id="_doubly__linked__list_8h_source_1l00318"/>00318 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00319"/><link linkend="_classalglib_1_1_doubly_linked_list_1a334fc7e2ca9a862d8978b0a3150276bd">00319</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a334fc7e2ca9a862d8978b0a3150276bd">DoublyLinkedList&lt;T&gt;::DeleteAtPosition</link>(uint32_t&#32;pos)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00320"/>00320 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">IsEmpty</link>())&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1a702e2c90c47734fc2bb07d6b773968a9">errors::kEmptyDeletion</link>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00322"/>00322 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00323"/>00323 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;current_size{<link linkend="_classalglib_1_1_doubly_linked_list_1ad461a49e8f7985adc7160c7b0a4d3170">Size</link>()};
<anchor xml:id="_doubly__linked__list_8h_source_1l00324"/>00324 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;&gt;=&#32;current_size)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00325"/>00325 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<link linkend="_namespacealglib_1_1errors_1afcfcd5dc808b27df606d5761cb149bb9">errors::kIndexOutOfRange</link>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00326"/>00326 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00327"/>00327 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;==&#32;0)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00328"/>00328 &#32;&#32;&#32;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a09d0d63d671d25354f023b526318f834">DeleteAtBeginning</link>();
<anchor xml:id="_doubly__linked__list_8h_source_1l00329"/>00329 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00330"/>00330 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00331"/>00331 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(pos&#32;==&#32;current_size&#32;-&#32;1)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a36a6aa7de2d8d22e917b2a2587f5d132">DeleteAtEnd</link>();
<anchor xml:id="_doubly__linked__list_8h_source_1l00333"/>00333 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00334"/>00334 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00335"/>00335 &#32;&#32;Node&#32;*curr{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00336"/>00336 &#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(uint32_t&#32;i{};&#32;i&#32;&lt;&#32;pos;&#32;++i)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00337"/>00337 &#32;&#32;&#32;&#32;curr&#32;=&#32;curr-&gt;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00338"/>00338 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00339"/>00339 &#32;&#32;Node&#32;*prev_node{curr-&gt;previous};
<anchor xml:id="_doubly__linked__list_8h_source_1l00340"/>00340 &#32;&#32;Node&#32;*next_node{curr-&gt;next};
<anchor xml:id="_doubly__linked__list_8h_source_1l00341"/>00341 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(prev_node)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00342"/>00342 &#32;&#32;&#32;&#32;prev_node-&gt;next&#32;=&#32;next_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00343"/>00343 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00344"/>00344 &#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(next_node)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00345"/>00345 &#32;&#32;&#32;&#32;next_node-&gt;previous&#32;=&#32;next_node;
<anchor xml:id="_doubly__linked__list_8h_source_1l00346"/>00346 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00347"/>00347 &#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;curr;
<anchor xml:id="_doubly__linked__list_8h_source_1l00348"/>00348 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00349"/>00349 
<anchor xml:id="_doubly__linked__list_8h_source_1l00354"/>00354 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00355"/><link linkend="_classalglib_1_1_doubly_linked_list_1a3793fbc2a10abfb97647386dae394770">00355</link> <link linkend="_classalglib_1_1_doubly_linked_list_1a3793fbc2a10abfb97647386dae394770">DoublyLinkedList&lt;T&gt;::~DoublyLinkedList</link>()&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00356"/>00356 &#32;&#32;Node&#32;*tmp{head_};
<anchor xml:id="_doubly__linked__list_8h_source_1l00357"/>00357 &#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(tmp)&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00358"/>00358 &#32;&#32;&#32;&#32;Node&#32;*next{tmp-&gt;next};
<anchor xml:id="_doubly__linked__list_8h_source_1l00359"/>00359 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;tmp;
<anchor xml:id="_doubly__linked__list_8h_source_1l00360"/>00360 &#32;&#32;&#32;&#32;tmp&#32;=&#32;next;
<anchor xml:id="_doubly__linked__list_8h_source_1l00361"/>00361 &#32;&#32;}
<anchor xml:id="_doubly__linked__list_8h_source_1l00362"/>00362 &#32;&#32;head_&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00363"/>00363 &#32;&#32;tail_&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="_doubly__linked__list_8h_source_1l00364"/>00364 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00365"/>00365 
<anchor xml:id="_doubly__linked__list_8h_source_1l00370"/>00370 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
<anchor xml:id="_doubly__linked__list_8h_source_1l00371"/><link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">00371</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classalglib_1_1_doubly_linked_list_1a591a79bc036bebea7c7f82b5e46719f7">DoublyLinkedList&lt;T&gt;::IsEmpty</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_doubly__linked__list_8h_source_1l00372"/>00372 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(head_&#32;==&#32;<emphasis role="keyword">nullptr</emphasis>);
<anchor xml:id="_doubly__linked__list_8h_source_1l00373"/>00373 }
<anchor xml:id="_doubly__linked__list_8h_source_1l00374"/>00374 
<anchor xml:id="_doubly__linked__list_8h_source_1l00375"/>00375 }&#32;&#32;<emphasis role="comment">//&#32;namespace&#32;alglib</emphasis>
<anchor xml:id="_doubly__linked__list_8h_source_1l00376"/>00376 
<anchor xml:id="_doubly__linked__list_8h_source_1l00377"/>00377 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">//&#32;ALGLIB_INCLUDE_DOUBLYLINKEDLIST_H_</emphasis>
</programlisting></section>
