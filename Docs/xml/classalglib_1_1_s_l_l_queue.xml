<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classalglib_1_1_s_l_l_queue" kind="class" language="C++" prot="public">
    <compoundname>alglib::SLLQueue</compoundname>
    <includes refid="sll__queue_8h" local="no">sll_queue.h</includes>
    <innerclass refid="structalglib_1_1_s_l_l_queue_1_1_node" prot="private">alglib::SLLQueue::Node</innerclass>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classalglib_1_1_s_l_l_queue_1ad55172f1594e96aac3addf92ee96715a" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* alglib::SLLQueue&lt; T &gt;::front</definition>
        <argsstring></argsstring>
        <name>front</name>
        <qualifiedname>alglib::SLLQueue::front</qualifiedname>
        <briefdescription>
<para>Pointer to the front of the queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="81" column="8" bodyfile="Include/sll_queue.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalglib_1_1_s_l_l_queue_1ae7d2b922aeaed7fe40bd63aa4abcfedb" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* alglib::SLLQueue&lt; T &gt;::rear</definition>
        <argsstring></argsstring>
        <name>rear</name>
        <qualifiedname>alglib::SLLQueue::rear</qualifiedname>
        <briefdescription>
<para>Pointer to the rear of the queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="85" column="8" bodyfile="Include/sll_queue.h" bodystart="85" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1a2f5239fecb9f452b1a633596cc9d231f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alglib::SLLQueue&lt; T &gt;::SLLQueue</definition>
        <argsstring>()</argsstring>
        <name>SLLQueue</name>
        <qualifiedname>alglib::SLLQueue::SLLQueue</qualifiedname>
        <briefdescription>
<para><ref refid="classalglib_1_1_s_l_l_queue" kindref="compound">SLLQueue</ref> constructor initializes the front and rear pointers to nullptr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="54" column="3" bodyfile="Include/sll_queue.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1a71f6c7dd358bc4b9559abed01d2eeb81" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool alglib::SLLQueue&lt; T &gt;::IsEmpty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IsEmpty</name>
        <qualifiedname>alglib::SLLQueue::IsEmpty</qualifiedname>
        <briefdescription>
<para>Checks if the queue is empty by checking if the front pointer is nullptr. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if empty, false if not.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="57" column="8" bodyfile="Include/sll_queue.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1a75b3e9b159186dfaec8f1dbd0d2ae66d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T alglib::SLLQueue&lt; T &gt;::Dequeue</definition>
        <argsstring>()</argsstring>
        <name>Dequeue</name>
        <qualifiedname>alglib::SLLQueue::Dequeue</qualifiedname>
        <briefdescription>
<para>Pops the value from the front of the queue and returns it. The front pointer is then set to the next node in the queue. If the front pointer is nullptr, the rear pointer is also set to nullptr. It deletes the node from the front, so it cannot be accesed after the operation. if the queue is empty, it throws a runtime error. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="58" column="5" bodyfile="Include/sll_queue.h" bodystart="120" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1aee3276b1c9da8deaae955ae795ca7a29" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void alglib::SLLQueue&lt; T &gt;::Enqueue</definition>
        <argsstring>(T value) noexcept</argsstring>
        <name>Enqueue</name>
        <qualifiedname>alglib::SLLQueue::Enqueue</qualifiedname>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a new node to the rear of the queue. If the queue is empty, the front and rear pointers are set to the new node. Otherwise, the new node is set as the next node of the rear pointer and the rear pointer is set to the new node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value to be inserted into queue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="59" column="8" bodyfile="Include/sll_queue.h" bodystart="141" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1a7495c1918c016e07f3a1470ebc50acfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T alglib::SLLQueue&lt; T &gt;::PeekFront</definition>
        <argsstring>() const</argsstring>
        <name>PeekFront</name>
        <qualifiedname>alglib::SLLQueue::PeekFront</qualifiedname>
        <briefdescription>
<para>Gets the value from the front of the queue without removing it. If the queue is empty, it throws a runtime error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="62" column="5" bodyfile="Include/sll_queue.h" bodystart="157" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1af1f002c738edc73b398f2b829f241e89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>T</type>
        <definition>T alglib::SLLQueue&lt; T &gt;::PeekRear</definition>
        <argsstring>() const</argsstring>
        <name>PeekRear</name>
        <qualifiedname>alglib::SLLQueue::PeekRear</qualifiedname>
        <briefdescription>
<para>Gets the value from the rear of the queue without removing it. If the queue is empty, it throws a runtime error. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="63" column="5" bodyfile="Include/sll_queue.h" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classalglib_1_1_s_l_l_queue_1a09a8c3f51d8f97fa373d487db380fe75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>alglib::SLLQueue&lt; T &gt;::~SLLQueue</definition>
        <argsstring>()</argsstring>
        <name>~SLLQueue</name>
        <qualifiedname>alglib::SLLQueue::~SLLQueue</qualifiedname>
        <briefdescription>
<para>Deletes all nodes from the queue. It starts from the front and deletes all nodes until the rear. It then deletes the rear node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Include/sll_queue.h" line="66" column="3" bodyfile="Include/sll_queue.h" bodystart="184" bodyend="192"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="classalglib_1_1_s_l_l_queue" kindref="compound">SLLQueue</ref> class is a queue data structure implemented using singly linked list. It allocates nodes on the heap. Queue can grow dynamically. There is no limit to the amount of elements besides the memory available. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>type that will be stored in queue.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="Include/sll_queue.h" line="51" column="1" bodyfile="Include/sll_queue.h" bodystart="51" bodyend="86"/>
    <listofallmembers>
      <member refid="classalglib_1_1_s_l_l_queue_1a75b3e9b159186dfaec8f1dbd0d2ae66d" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>Dequeue</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1aee3276b1c9da8deaae955ae795ca7a29" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>Enqueue</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1ad55172f1594e96aac3addf92ee96715a" prot="private" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>front</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1a71f6c7dd358bc4b9559abed01d2eeb81" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>IsEmpty</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1a7495c1918c016e07f3a1470ebc50acfa" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>PeekFront</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1af1f002c738edc73b398f2b829f241e89" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>PeekRear</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1ae7d2b922aeaed7fe40bd63aa4abcfedb" prot="private" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>rear</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1a2f5239fecb9f452b1a633596cc9d231f" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>SLLQueue</name></member>
      <member refid="classalglib_1_1_s_l_l_queue_1a09a8c3f51d8f97fa373d487db380fe75" prot="public" virt="non-virtual"><scope>alglib::SLLQueue</scope><name>~SLLQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
